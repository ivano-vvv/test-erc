{
	"id": "e004c6f4508159435634cdf2a7963c1c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TestERC.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./ERCProto.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TestERC is ERCProto, Ownable {\r\n    constructor() Ownable(msg.sender) {\r\n        _name = \"TestERC\";\r\n        _symbol = \"TERC\";\r\n    }\r\n\r\n    function mint(uint256 value) external onlyOwner returns (bool) {\r\n        return super._mint(owner(), value);\r\n    }\r\n\r\n    function burn(address from, uint256 value) external onlyOwner returns (bool) {\r\n        return super._burn(from, value);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/ERCProto.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\r\n\r\nabstract contract ERCProto is IERC20, IERC20Metadata {\r\n    string _name;\r\n    string _symbol;\r\n\r\n    uint256 _total;\r\n\r\n    mapping (address => uint256) _balances;\r\n    mapping (address => mapping (address => uint256)) _allowances;\r\n\r\n    function name() external view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    function symbol() external view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    function decimals() external pure returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _total;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) external returns (bool) {\r\n        if (to == address(0)) {\r\n            revert(\"Invalid address\");\r\n        }\r\n\r\n        if (_balances[msg.sender] < value) {\r\n            revert(\"Insufficient balance\");\r\n        }\r\n\r\n        _balances[msg.sender] -= value;\r\n        _balances[to] += value; \r\n\r\n        emit Transfer(msg.sender, to, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender) external view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 value) external returns (bool) {\r\n        if (spender == address(0)) {\r\n            revert(\"Invalid address\");\r\n        }\r\n\r\n        _allowances[msg.sender][spender] = 0;\r\n        _allowances[msg.sender][spender] = value;\r\n\r\n        emit Approval(msg.sender, spender, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool) {\r\n        if (from == address(0)) {\r\n            revert(\"Invalid sender address\");\r\n        }\r\n\r\n        if (from == address(0)) {\r\n            revert(\"Invalid receiver address\");\r\n        }\r\n\r\n        if (_allowances[from][msg.sender] < value) {\r\n            revert(\"Not allowed\"); \r\n        }\r\n\r\n        if (_balances[from] < value) {\r\n            revert(\"Insufficient balance\");\r\n        }\r\n\r\n        _balances[to] += value;\r\n        _balances[from] -= value;\r\n\r\n        unchecked {\r\n            _allowances[from][msg.sender] -= value;\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _mint(address to, uint256 value) internal returns (bool) {\r\n        if (to == address(0)) {\r\n            revert(\"Invalid receiver address\");\r\n        }\r\n\r\n        _total += value;\r\n        _balances[to] += value;\r\n\r\n        emit Transfer(address(0), to, value);\r\n\r\n        return true;\r\n    }\r\n\r\n    function _burn(address from, uint256 value) internal returns (bool) {\r\n        if (address(0) == from) {\r\n            revert(\"Invalid address\");\r\n        }\r\n        \r\n        if (_balances[from] < value) {\r\n            _total -= _balances[from];\r\n            _balances[from] = 0;\r\n        } else {\r\n            _total -= value;\r\n            _balances[from] -= value;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERCProto.sol": {
				"ERCProto": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERCProto.sol\":\"ERCProto\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"contracts/ERCProto.sol\":{\"keccak256\":\"0x6b82c9edfe451e87cee8925a4ff30f0b178cd94b03e70245d9af06b6c91e6bb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b77602a1d691971a896c3922487205ebeeb99b9f8b9ebb28bee09e8d562924\",\"dweb:/ipfs/QmV5atnWwUMgpoiZCnVmgCUGAhym5e5z2f8N6CRhm6c2Uh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 291,
								"contract": "contracts/ERCProto.sol:ERCProto",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 293,
								"contract": "contracts/ERCProto.sol:ERCProto",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 295,
								"contract": "contracts/ERCProto.sol:ERCProto",
								"label": "_total",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 299,
								"contract": "contracts/ERCProto.sol:ERCProto",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 305,
								"contract": "contracts/ERCProto.sol:ERCProto",
								"label": "_allowances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TestERC.sol": {
				"TestERC": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TestERC.sol\":145:549  contract TestERC is ERCProto, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TestERC.sol\":190:287  constructor() Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/TestERC.sol\":212:222  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/TestERC.sol\":235:252  _name = \"TestERC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x5465737445524300000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TestERC.sol\":235:240  _name */\n  0x00\n    /* \"contracts/TestERC.sol\":235:252  _name = \"TestERC\" */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/TestERC.sol\":263:279  _symbol = \"TERC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5445524300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/TestERC.sol\":263:270  _symbol */\n  0x01\n    /* \"contracts/TestERC.sol\":263:279  _symbol = \"TERC\" */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/TestERC.sol\":145:549  contract TestERC is ERCProto, Ownable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_16:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_17:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_42\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_18:\n    /* \"#utility.yul\":328:352   */\n  tag_44\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_17\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_46\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_18\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:692   */\ntag_19:\n    /* \"#utility.yul\":645:651   */\n  0x00\n    /* \"#utility.yul\":679:684   */\n  dup2\n    /* \"#utility.yul\":673:685   */\n  mload\n    /* \"#utility.yul\":663:685   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:692   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":698:878   */\ntag_20:\n    /* \"#utility.yul\":746:823   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":743:744   */\n  0x00\n    /* \"#utility.yul\":736:824   */\n  mstore\n    /* \"#utility.yul\":843:847   */\n  0x41\n    /* \"#utility.yul\":840:841   */\n  0x04\n    /* \"#utility.yul\":833:848   */\n  mstore\n    /* \"#utility.yul\":867:871   */\n  0x24\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":857:872   */\n  revert\n    /* \"#utility.yul\":884:1064   */\ntag_21:\n    /* \"#utility.yul\":932:1009   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":929:930   */\n  0x00\n    /* \"#utility.yul\":922:1010   */\n  mstore\n    /* \"#utility.yul\":1029:1033   */\n  0x22\n    /* \"#utility.yul\":1026:1027   */\n  0x04\n    /* \"#utility.yul\":1019:1034   */\n  mstore\n    /* \"#utility.yul\":1053:1057   */\n  0x24\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1043:1058   */\n  revert\n    /* \"#utility.yul\":1070:1390   */\ntag_22:\n    /* \"#utility.yul\":1114:1120   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  0x02\n    /* \"#utility.yul\":1145:1149   */\n  dup3\n    /* \"#utility.yul\":1141:1153   */\n  div\n    /* \"#utility.yul\":1131:1153   */\n  swap1\n  pop\n    /* \"#utility.yul\":1198:1199   */\n  0x01\n    /* \"#utility.yul\":1192:1196   */\n  dup3\n    /* \"#utility.yul\":1188:1200   */\n  and\n    /* \"#utility.yul\":1219:1237   */\n  dup1\n    /* \"#utility.yul\":1209:1290   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1275:1279   */\n  0x7f\n    /* \"#utility.yul\":1267:1273   */\n  dup3\n    /* \"#utility.yul\":1263:1280   */\n  and\n    /* \"#utility.yul\":1253:1280   */\n  swap2\n  pop\n    /* \"#utility.yul\":1209:1290   */\ntag_51:\n    /* \"#utility.yul\":1337:1339   */\n  0x20\n    /* \"#utility.yul\":1329:1335   */\n  dup3\n    /* \"#utility.yul\":1326:1340   */\n  lt\n    /* \"#utility.yul\":1306:1324   */\n  dup2\n    /* \"#utility.yul\":1303:1341   */\n  sub\n    /* \"#utility.yul\":1300:1384   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1356:1374   */\n  tag_53\n  tag_21\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1300:1384   */\ntag_52:\n    /* \"#utility.yul\":1121:1390   */\n  pop\n    /* \"#utility.yul\":1070:1390   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1396:1537   */\ntag_23:\n    /* \"#utility.yul\":1445:1449   */\n  0x00\n    /* \"#utility.yul\":1468:1471   */\n  dup2\n    /* \"#utility.yul\":1460:1471   */\n  swap1\n  pop\n    /* \"#utility.yul\":1491:1494   */\n  dup2\n    /* \"#utility.yul\":1488:1489   */\n  0x00\n    /* \"#utility.yul\":1481:1495   */\n  mstore\n    /* \"#utility.yul\":1525:1529   */\n  0x20\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1512:1530   */\n  keccak256\n    /* \"#utility.yul\":1504:1530   */\n  swap1\n  pop\n    /* \"#utility.yul\":1396:1537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1543:1636   */\ntag_24:\n    /* \"#utility.yul\":1580:1586   */\n  0x00\n    /* \"#utility.yul\":1627:1629   */\n  0x20\n    /* \"#utility.yul\":1622:1624   */\n  0x1f\n    /* \"#utility.yul\":1615:1620   */\n  dup4\n    /* \"#utility.yul\":1611:1625   */\n  add\n    /* \"#utility.yul\":1607:1630   */\n  div\n    /* \"#utility.yul\":1597:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1543:1636   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1642:1749   */\ntag_25:\n    /* \"#utility.yul\":1686:1694   */\n  0x00\n    /* \"#utility.yul\":1736:1741   */\n  dup3\n    /* \"#utility.yul\":1730:1734   */\n  dup3\n    /* \"#utility.yul\":1726:1742   */\n  shl\n    /* \"#utility.yul\":1705:1742   */\n  swap1\n  pop\n    /* \"#utility.yul\":1642:1749   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2148   */\ntag_26:\n    /* \"#utility.yul\":1824:1830   */\n  0x00\n    /* \"#utility.yul\":1874:1875   */\n  0x08\n    /* \"#utility.yul\":1862:1872   */\n  dup4\n    /* \"#utility.yul\":1858:1876   */\n  mul\n    /* \"#utility.yul\":1897:1994   */\n  tag_58\n    /* \"#utility.yul\":1927:1993   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1916:1925   */\n  dup3\n    /* \"#utility.yul\":1897:1994   */\n  tag_25\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2015:2054   */\n  tag_59\n    /* \"#utility.yul\":2045:2053   */\n  dup7\n    /* \"#utility.yul\":2034:2043   */\n  dup4\n    /* \"#utility.yul\":2015:2054   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2003:2054   */\n  swap6\n  pop\n    /* \"#utility.yul\":2087:2091   */\n  dup1\n    /* \"#utility.yul\":2083:2092   */\n  not\n    /* \"#utility.yul\":2076:2081   */\n  dup5\n    /* \"#utility.yul\":2072:2093   */\n  and\n    /* \"#utility.yul\":2063:2093   */\n  swap4\n  pop\n    /* \"#utility.yul\":2136:2140   */\n  dup1\n    /* \"#utility.yul\":2126:2134   */\n  dup7\n    /* \"#utility.yul\":2122:2141   */\n  and\n    /* \"#utility.yul\":2115:2120   */\n  dup5\n    /* \"#utility.yul\":2112:2142   */\n  or\n    /* \"#utility.yul\":2102:2142   */\n  swap3\n  pop\n    /* \"#utility.yul\":1831:2148   */\n  pop\n  pop\n    /* \"#utility.yul\":1755:2148   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2154:2231   */\ntag_27:\n    /* \"#utility.yul\":2191:2198   */\n  0x00\n    /* \"#utility.yul\":2220:2225   */\n  dup2\n    /* \"#utility.yul\":2209:2225   */\n  swap1\n  pop\n    /* \"#utility.yul\":2154:2231   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2237:2297   */\ntag_28:\n    /* \"#utility.yul\":2265:2268   */\n  0x00\n    /* \"#utility.yul\":2286:2291   */\n  dup2\n    /* \"#utility.yul\":2279:2291   */\n  swap1\n  pop\n    /* \"#utility.yul\":2237:2297   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2303:2445   */\ntag_29:\n    /* \"#utility.yul\":2353:2362   */\n  0x00\n    /* \"#utility.yul\":2386:2439   */\n  tag_63\n    /* \"#utility.yul\":2404:2438   */\n  tag_64\n    /* \"#utility.yul\":2413:2437   */\n  tag_65\n    /* \"#utility.yul\":2431:2436   */\n  dup5\n    /* \"#utility.yul\":2413:2437   */\n  tag_27\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2404:2438   */\n  tag_28\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2386:2439   */\n  tag_27\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2373:2439   */\n  swap1\n  pop\n    /* \"#utility.yul\":2303:2445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2451:2526   */\ntag_30:\n    /* \"#utility.yul\":2494:2497   */\n  0x00\n    /* \"#utility.yul\":2515:2520   */\n  dup2\n    /* \"#utility.yul\":2508:2520   */\n  swap1\n  pop\n    /* \"#utility.yul\":2451:2526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2532:2801   */\ntag_31:\n    /* \"#utility.yul\":2642:2681   */\n  tag_68\n    /* \"#utility.yul\":2673:2680   */\n  dup4\n    /* \"#utility.yul\":2642:2681   */\n  tag_29\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2703:2794   */\n  tag_69\n    /* \"#utility.yul\":2752:2793   */\n  tag_70\n    /* \"#utility.yul\":2776:2792   */\n  dup3\n    /* \"#utility.yul\":2752:2793   */\n  tag_30\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2744:2750   */\n  dup5\n    /* \"#utility.yul\":2737:2741   */\n  dup5\n    /* \"#utility.yul\":2731:2742   */\n  sload\n    /* \"#utility.yul\":2703:2794   */\n  tag_26\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2697:2701   */\n  dup3\n    /* \"#utility.yul\":2690:2795   */\n  sstore\n    /* \"#utility.yul\":2608:2801   */\n  pop\n    /* \"#utility.yul\":2532:2801   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2807:2880   */\ntag_32:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2807:2880   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2886:3075   */\ntag_33:\n    /* \"#utility.yul\":2963:2995   */\n  tag_73\n  tag_32\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3004:3069   */\n  tag_74\n    /* \"#utility.yul\":3062:3068   */\n  dup2\n    /* \"#utility.yul\":3054:3060   */\n  dup5\n    /* \"#utility.yul\":3048:3052   */\n  dup5\n    /* \"#utility.yul\":3004:3069   */\n  tag_31\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2939:3075   */\n  pop\n    /* \"#utility.yul\":2886:3075   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3267   */\ntag_34:\n    /* \"#utility.yul\":3141:3261   */\ntag_76:\n    /* \"#utility.yul\":3158:3161   */\n  dup2\n    /* \"#utility.yul\":3151:3156   */\n  dup2\n    /* \"#utility.yul\":3148:3162   */\n  lt\n    /* \"#utility.yul\":3141:3261   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3212:3251   */\n  tag_79\n    /* \"#utility.yul\":3249:3250   */\n  0x00\n    /* \"#utility.yul\":3242:3247   */\n  dup3\n    /* \"#utility.yul\":3212:3251   */\n  tag_33\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3185:3186   */\n  0x01\n    /* \"#utility.yul\":3178:3183   */\n  dup2\n    /* \"#utility.yul\":3174:3187   */\n  add\n    /* \"#utility.yul\":3165:3187   */\n  swap1\n  pop\n    /* \"#utility.yul\":3141:3261   */\n  jump(tag_76)\ntag_78:\n    /* \"#utility.yul\":3081:3267   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3273:3816   */\ntag_35:\n    /* \"#utility.yul\":3374:3376   */\n  0x1f\n    /* \"#utility.yul\":3369:3372   */\n  dup3\n    /* \"#utility.yul\":3366:3377   */\n  gt\n    /* \"#utility.yul\":3363:3809   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3408:3446   */\n  tag_82\n    /* \"#utility.yul\":3440:3445   */\n  dup2\n    /* \"#utility.yul\":3408:3446   */\n  tag_23\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3492:3521   */\n  tag_83\n    /* \"#utility.yul\":3510:3520   */\n  dup5\n    /* \"#utility.yul\":3492:3521   */\n  tag_24\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3482:3490   */\n  dup2\n    /* \"#utility.yul\":3478:3522   */\n  add\n    /* \"#utility.yul\":3675:3677   */\n  0x20\n    /* \"#utility.yul\":3663:3673   */\n  dup6\n    /* \"#utility.yul\":3660:3678   */\n  lt\n    /* \"#utility.yul\":3657:3706   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3696:3704   */\n  dup2\n    /* \"#utility.yul\":3681:3704   */\n  swap1\n  pop\n    /* \"#utility.yul\":3657:3706   */\ntag_84:\n    /* \"#utility.yul\":3719:3799   */\n  tag_85\n    /* \"#utility.yul\":3775:3797   */\n  tag_86\n    /* \"#utility.yul\":3793:3796   */\n  dup6\n    /* \"#utility.yul\":3775:3797   */\n  tag_24\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3765:3773   */\n  dup4\n    /* \"#utility.yul\":3761:3798   */\n  add\n    /* \"#utility.yul\":3748:3759   */\n  dup3\n    /* \"#utility.yul\":3719:3799   */\n  tag_34\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3378:3809   */\n  pop\n  pop\n    /* \"#utility.yul\":3363:3809   */\ntag_81:\n    /* \"#utility.yul\":3273:3816   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3822:3939   */\ntag_36:\n    /* \"#utility.yul\":3876:3884   */\n  0x00\n    /* \"#utility.yul\":3926:3931   */\n  dup3\n    /* \"#utility.yul\":3920:3924   */\n  dup3\n    /* \"#utility.yul\":3916:3932   */\n  shr\n    /* \"#utility.yul\":3895:3932   */\n  swap1\n  pop\n    /* \"#utility.yul\":3822:3939   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3945:4114   */\ntag_37:\n    /* \"#utility.yul\":3989:3995   */\n  0x00\n    /* \"#utility.yul\":4022:4073   */\n  tag_89\n    /* \"#utility.yul\":4070:4071   */\n  0x00\n    /* \"#utility.yul\":4066:4072   */\n  not\n    /* \"#utility.yul\":4058:4063   */\n  dup5\n    /* \"#utility.yul\":4055:4056   */\n  0x08\n    /* \"#utility.yul\":4051:4064   */\n  mul\n    /* \"#utility.yul\":4022:4073   */\n  tag_36\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4018:4074   */\n  not\n    /* \"#utility.yul\":4103:4107   */\n  dup1\n    /* \"#utility.yul\":4097:4101   */\n  dup4\n    /* \"#utility.yul\":4093:4108   */\n  and\n    /* \"#utility.yul\":4083:4108   */\n  swap2\n  pop\n    /* \"#utility.yul\":3996:4114   */\n  pop\n    /* \"#utility.yul\":3945:4114   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4119:4414   */\ntag_38:\n    /* \"#utility.yul\":4195:4199   */\n  0x00\n    /* \"#utility.yul\":4341:4370   */\n  tag_91\n    /* \"#utility.yul\":4366:4369   */\n  dup4\n    /* \"#utility.yul\":4360:4364   */\n  dup4\n    /* \"#utility.yul\":4341:4370   */\n  tag_37\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4333:4370   */\n  swap2\n  pop\n    /* \"#utility.yul\":4403:4406   */\n  dup3\n    /* \"#utility.yul\":4400:4401   */\n  0x02\n    /* \"#utility.yul\":4396:4407   */\n  mul\n    /* \"#utility.yul\":4390:4394   */\n  dup3\n    /* \"#utility.yul\":4387:4408   */\n  or\n    /* \"#utility.yul\":4379:4408   */\n  swap1\n  pop\n    /* \"#utility.yul\":4119:4414   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4419:5814   */\ntag_12:\n    /* \"#utility.yul\":4536:4573   */\n  tag_93\n    /* \"#utility.yul\":4569:4572   */\n  dup3\n    /* \"#utility.yul\":4536:4573   */\n  tag_19\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4638:4656   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4630:4636   */\n  dup2\n    /* \"#utility.yul\":4627:4657   */\n  gt\n    /* \"#utility.yul\":4624:4680   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4660:4678   */\n  tag_95\n  tag_20\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4624:4680   */\ntag_94:\n    /* \"#utility.yul\":4704:4742   */\n  tag_96\n    /* \"#utility.yul\":4736:4740   */\n  dup3\n    /* \"#utility.yul\":4730:4741   */\n  sload\n    /* \"#utility.yul\":4704:4742   */\n  tag_22\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4789:4856   */\n  tag_97\n    /* \"#utility.yul\":4849:4855   */\n  dup3\n    /* \"#utility.yul\":4841:4847   */\n  dup3\n    /* \"#utility.yul\":4835:4839   */\n  dup6\n    /* \"#utility.yul\":4789:4856   */\n  tag_35\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4883:4884   */\n  0x00\n    /* \"#utility.yul\":4907:4911   */\n  0x20\n    /* \"#utility.yul\":4894:4911   */\n  swap1\n  pop\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4931:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  gt\n    /* \"#utility.yul\":4956:4957   */\n  0x01\n    /* \"#utility.yul\":4951:5569   */\n  dup2\n  eq\n  tag_99\n  jumpi\n    /* \"#utility.yul\":5613:5614   */\n  0x00\n    /* \"#utility.yul\":5630:5636   */\n  dup5\n    /* \"#utility.yul\":5627:5704   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5679:5688   */\n  dup3\n    /* \"#utility.yul\":5674:5677   */\n  dup8\n    /* \"#utility.yul\":5670:5689   */\n  add\n    /* \"#utility.yul\":5664:5690   */\n  mload\n    /* \"#utility.yul\":5655:5690   */\n  swap1\n  pop\n    /* \"#utility.yul\":5627:5704   */\ntag_100:\n    /* \"#utility.yul\":5730:5797   */\n  tag_101\n    /* \"#utility.yul\":5790:5796   */\n  dup6\n    /* \"#utility.yul\":5783:5788   */\n  dup3\n    /* \"#utility.yul\":5730:5797   */\n  tag_38\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5724:5728   */\n  dup7\n    /* \"#utility.yul\":5717:5798   */\n  sstore\n    /* \"#utility.yul\":5586:5808   */\n  pop\n    /* \"#utility.yul\":4921:5808   */\n  jump(tag_98)\n    /* \"#utility.yul\":4951:5569   */\ntag_99:\n    /* \"#utility.yul\":5003:5007   */\n  0x1f\n    /* \"#utility.yul\":4999:5008   */\n  not\n    /* \"#utility.yul\":4991:4997   */\n  dup5\n    /* \"#utility.yul\":4987:5009   */\n  and\n    /* \"#utility.yul\":5037:5074   */\n  tag_102\n    /* \"#utility.yul\":5069:5073   */\n  dup7\n    /* \"#utility.yul\":5037:5074   */\n  tag_23\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5096:5097   */\n  0x00\n    /* \"#utility.yul\":5110:5318   */\ntag_103:\n    /* \"#utility.yul\":5124:5131   */\n  dup3\n    /* \"#utility.yul\":5121:5122   */\n  dup2\n    /* \"#utility.yul\":5118:5132   */\n  lt\n    /* \"#utility.yul\":5110:5318   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":5203:5212   */\n  dup5\n    /* \"#utility.yul\":5198:5201   */\n  dup10\n    /* \"#utility.yul\":5194:5213   */\n  add\n    /* \"#utility.yul\":5188:5214   */\n  mload\n    /* \"#utility.yul\":5180:5186   */\n  dup3\n    /* \"#utility.yul\":5173:5215   */\n  sstore\n    /* \"#utility.yul\":5254:5255   */\n  0x01\n    /* \"#utility.yul\":5246:5252   */\n  dup3\n    /* \"#utility.yul\":5242:5256   */\n  add\n    /* \"#utility.yul\":5232:5256   */\n  swap2\n  pop\n    /* \"#utility.yul\":5301:5303   */\n  0x20\n    /* \"#utility.yul\":5290:5299   */\n  dup6\n    /* \"#utility.yul\":5286:5304   */\n  add\n    /* \"#utility.yul\":5273:5304   */\n  swap5\n  pop\n    /* \"#utility.yul\":5147:5151   */\n  0x20\n    /* \"#utility.yul\":5144:5145   */\n  dup2\n    /* \"#utility.yul\":5140:5152   */\n  add\n    /* \"#utility.yul\":5135:5152   */\n  swap1\n  pop\n    /* \"#utility.yul\":5110:5318   */\n  jump(tag_103)\ntag_105:\n    /* \"#utility.yul\":5346:5352   */\n  dup7\n    /* \"#utility.yul\":5337:5344   */\n  dup4\n    /* \"#utility.yul\":5334:5353   */\n  lt\n    /* \"#utility.yul\":5331:5510   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":5404:5413   */\n  dup5\n    /* \"#utility.yul\":5399:5402   */\n  dup10\n    /* \"#utility.yul\":5395:5414   */\n  add\n    /* \"#utility.yul\":5389:5415   */\n  mload\n    /* \"#utility.yul\":5447:5495   */\n  tag_107\n    /* \"#utility.yul\":5489:5493   */\n  0x1f\n    /* \"#utility.yul\":5481:5487   */\n  dup10\n    /* \"#utility.yul\":5477:5494   */\n  and\n    /* \"#utility.yul\":5466:5475   */\n  dup3\n    /* \"#utility.yul\":5447:5495   */\n  tag_37\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5439:5445   */\n  dup4\n    /* \"#utility.yul\":5432:5496   */\n  sstore\n    /* \"#utility.yul\":5354:5510   */\n  pop\n    /* \"#utility.yul\":5331:5510   */\ntag_106:\n    /* \"#utility.yul\":5556:5557   */\n  0x01\n    /* \"#utility.yul\":5552:5553   */\n  0x02\n    /* \"#utility.yul\":5544:5550   */\n  dup9\n    /* \"#utility.yul\":5540:5554   */\n  mul\n    /* \"#utility.yul\":5536:5558   */\n  add\n    /* \"#utility.yul\":5530:5534   */\n  dup9\n    /* \"#utility.yul\":5523:5559   */\n  sstore\n    /* \"#utility.yul\":4958:5569   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4921:5808   */\ntag_98:\n  pop\n    /* \"#utility.yul\":4511:5814   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4419:5814   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TestERC.sol\":145:549  contract TestERC is ERCProto, Ownable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TestERC.sol\":145:549  contract TestERC is ERCProto, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERCProto.sol\":440:525  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":1498:1846  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":716:803  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":1854:2565  function transferFrom(address from, address to, uint256 value) external returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":630:708  function decimals() external pure returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":811:923  function balanceOf(address account) external view returns (uint256) {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":533:622  function symbol() external view returns (string memory) {... */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TestERC.sol\":419:546  function burn(address from, uint256 value) external onlyOwner returns (bool) {... */\n    tag_12:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TestERC.sol\":295:411  function mint(uint256 value) external onlyOwner returns (bool) {... */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":931:1346  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERCProto.sol\":1354:1490  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/ERCProto.sol\":440:525  function name() external view returns (string memory) {... */\n    tag_21:\n        /* \"contracts/ERCProto.sol\":479:492  string memory */\n      0x60\n        /* \"contracts/ERCProto.sol\":512:517  _name */\n      0x00\n        /* \"contracts/ERCProto.sol\":505:517  return _name */\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_80\n      jump\t// in\n    tag_81:\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_83\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_82)\n    tag_83:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":440:525  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":1498:1846  function approve(address spender, uint256 value) external returns (bool) {... */\n    tag_27:\n        /* \"contracts/ERCProto.sol\":1565:1569  bool */\n      0x00\n        /* \"contracts/ERCProto.sol\":1605:1606  0 */\n      dup1\n        /* \"contracts/ERCProto.sol\":1586:1607  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":1586:1593  spender */\n      dup4\n        /* \"contracts/ERCProto.sol\":1586:1607  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERCProto.sol\":1582:1661  if (spender == address(0)) {... */\n      tag_86\n      jumpi\n        /* \"contracts/ERCProto.sol\":1624:1649  revert(\"Invalid address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":1582:1661  if (spender == address(0)) {... */\n    tag_86:\n        /* \"contracts/ERCProto.sol\":1708:1709  0 */\n      0x00\n        /* \"contracts/ERCProto.sol\":1673:1684  _allowances */\n      0x04\n        /* \"contracts/ERCProto.sol\":1673:1696  _allowances[msg.sender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1685:1695  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":1673:1696  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":1673:1705  _allowances[msg.sender][spender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1697:1704  spender */\n      dup6\n        /* \"contracts/ERCProto.sol\":1673:1705  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":1673:1709  _allowances[msg.sender][spender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":1755:1760  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":1720:1731  _allowances */\n      0x04\n        /* \"contracts/ERCProto.sol\":1720:1743  _allowances[msg.sender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1732:1742  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":1720:1743  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":1720:1752  _allowances[msg.sender][spender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1744:1751  spender */\n      dup6\n        /* \"contracts/ERCProto.sol\":1720:1752  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":1720:1760  _allowances[msg.sender][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":1799:1806  spender */\n      dup3\n        /* \"contracts/ERCProto.sol\":1778:1814  Approval(msg.sender, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":1787:1797  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":1778:1814  Approval(msg.sender, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/ERCProto.sol\":1808:1813  value */\n      dup5\n        /* \"contracts/ERCProto.sol\":1778:1814  Approval(msg.sender, spender, value) */\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERCProto.sol\":1834:1838  true */\n      0x01\n        /* \"contracts/ERCProto.sol\":1827:1838  return true */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":1498:1846  function approve(address spender, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":716:803  function totalSupply() external view returns (uint256) {... */\n    tag_31:\n        /* \"contracts/ERCProto.sol\":762:769  uint256 */\n      0x00\n        /* \"contracts/ERCProto.sol\":789:795  _total */\n      sload(0x02)\n        /* \"contracts/ERCProto.sol\":782:795  return _total */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":716:803  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":1854:2565  function transferFrom(address from, address to, uint256 value) external returns (bool) {... */\n    tag_37:\n        /* \"contracts/ERCProto.sol\":1935:1939  bool */\n      0x00\n        /* \"contracts/ERCProto.sol\":1972:1973  0 */\n      dup1\n        /* \"contracts/ERCProto.sol\":1956:1974  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":1956:1960  from */\n      dup5\n        /* \"contracts/ERCProto.sol\":1956:1974  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERCProto.sol\":1952:2035  if (from == address(0)) {... */\n      tag_92\n      jumpi\n        /* \"contracts/ERCProto.sol\":1991:2023  revert(\"Invalid sender address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":1952:2035  if (from == address(0)) {... */\n    tag_92:\n        /* \"contracts/ERCProto.sol\":2067:2068  0 */\n      0x00\n        /* \"contracts/ERCProto.sol\":2051:2069  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":2051:2055  from */\n      dup5\n        /* \"contracts/ERCProto.sol\":2051:2069  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERCProto.sol\":2047:2132  if (from == address(0)) {... */\n      tag_95\n      jumpi\n        /* \"contracts/ERCProto.sol\":2086:2120  revert(\"Invalid receiver address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":2047:2132  if (from == address(0)) {... */\n    tag_95:\n        /* \"contracts/ERCProto.sol\":2180:2185  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2148:2159  _allowances */\n      0x04\n        /* \"contracts/ERCProto.sol\":2148:2165  _allowances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2160:2164  from */\n      dup7\n        /* \"contracts/ERCProto.sol\":2148:2165  _allowances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":2148:2177  _allowances[from][msg.sender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2166:2176  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":2148:2177  _allowances[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":2148:2185  _allowances[from][msg.sender] < value */\n      lt\n        /* \"contracts/ERCProto.sol\":2144:2236  if (_allowances[from][msg.sender] < value) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/ERCProto.sol\":2202:2223  revert(\"Not allowed\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":2144:2236  if (_allowances[from][msg.sender] < value) {... */\n    tag_98:\n        /* \"contracts/ERCProto.sol\":2270:2275  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2252:2261  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":2252:2267  _balances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2262:2266  from */\n      dup7\n        /* \"contracts/ERCProto.sol\":2252:2267  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":2252:2275  _balances[from] < value */\n      lt\n        /* \"contracts/ERCProto.sol\":2248:2334  if (_balances[from] < value) {... */\n      iszero\n      tag_101\n      jumpi\n        /* \"contracts/ERCProto.sol\":2292:2322  revert(\"Insufficient balance\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":2248:2334  if (_balances[from] < value) {... */\n    tag_101:\n        /* \"contracts/ERCProto.sol\":2363:2368  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2346:2355  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":2346:2359  _balances[to] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2356:2358  to */\n      dup6\n        /* \"contracts/ERCProto.sol\":2346:2359  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":2346:2368  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":2398:2403  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2379:2388  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":2379:2394  _balances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2389:2393  from */\n      dup7\n        /* \"contracts/ERCProto.sol\":2379:2394  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":2379:2403  _balances[from] -= value */\n      dup3\n      dup3\n      sload\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":2474:2479  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2441:2452  _allowances */\n      0x04\n        /* \"contracts/ERCProto.sol\":2441:2458  _allowances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2453:2457  from */\n      dup7\n        /* \"contracts/ERCProto.sol\":2441:2458  _allowances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":2441:2470  _allowances[from][msg.sender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2459:2469  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":2441:2470  _allowances[from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":2441:2479  _allowances[from][msg.sender] -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":2523:2525  to */\n      dup3\n        /* \"contracts/ERCProto.sol\":2508:2533  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":2517:2521  from */\n      dup5\n        /* \"contracts/ERCProto.sol\":2508:2533  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERCProto.sol\":2527:2532  value */\n      dup5\n        /* \"contracts/ERCProto.sol\":2508:2533  Transfer(from, to, value) */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERCProto.sol\":2553:2557  true */\n      0x01\n        /* \"contracts/ERCProto.sol\":2546:2557  return true */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":1854:2565  function transferFrom(address from, address to, uint256 value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":630:708  function decimals() external pure returns (uint8) {... */\n    tag_40:\n        /* \"contracts/ERCProto.sol\":673:678  uint8 */\n      0x00\n        /* \"contracts/ERCProto.sol\":698:700  18 */\n      0x12\n        /* \"contracts/ERCProto.sol\":691:700  return 18 */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":630:708  function decimals() external pure returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":811:923  function balanceOf(address account) external view returns (uint256) {... */\n    tag_46:\n        /* \"contracts/ERCProto.sol\":870:877  uint256 */\n      0x00\n        /* \"contracts/ERCProto.sol\":897:906  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":897:915  _balances[account] */\n      0x00\n        /* \"contracts/ERCProto.sol\":907:914  account */\n      dup4\n        /* \"contracts/ERCProto.sol\":897:915  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":890:915  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":811:923  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":533:622  function symbol() external view returns (string memory) {... */\n    tag_55:\n        /* \"contracts/ERCProto.sol\":574:587  string memory */\n      0x60\n        /* \"contracts/ERCProto.sol\":607:614  _symbol */\n      0x01\n        /* \"contracts/ERCProto.sol\":600:614  return _symbol */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_80\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_80\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":533:622  function symbol() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TestERC.sol\":419:546  function burn(address from, uint256 value) external onlyOwner returns (bool) {... */\n    tag_59:\n        /* \"contracts/TestERC.sol\":490:494  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/TestERC.sol\":514:538  super._burn(from, value) */\n      tag_127\n        /* \"contracts/TestERC.sol\":526:530  from */\n      dup4\n        /* \"contracts/TestERC.sol\":532:537  value */\n      dup4\n        /* \"contracts/TestERC.sol\":514:525  super._burn */\n      tag_128\n        /* \"contracts/TestERC.sol\":514:538  super._burn(from, value) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/TestERC.sol\":507:538  return super._burn(from, value) */\n      swap1\n      pop\n        /* \"contracts/TestERC.sol\":419:546  function burn(address from, uint256 value) external onlyOwner returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TestERC.sol\":295:411  function mint(uint256 value) external onlyOwner returns (bool) {... */\n    tag_64:\n        /* \"contracts/TestERC.sol\":352:356  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/TestERC.sol\":376:403  super._mint(owner(), value) */\n      tag_132\n        /* \"contracts/TestERC.sol\":388:395  owner() */\n      tag_133\n        /* \"contracts/TestERC.sol\":388:393  owner */\n      tag_51\n        /* \"contracts/TestERC.sol\":388:395  owner() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/TestERC.sol\":397:402  value */\n      dup4\n        /* \"contracts/TestERC.sol\":376:387  super._mint */\n      tag_134\n        /* \"contracts/TestERC.sol\":376:403  super._mint(owner(), value) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/TestERC.sol\":369:403  return super._mint(owner(), value) */\n      swap1\n      pop\n        /* \"contracts/TestERC.sol\":295:411  function mint(uint256 value) external onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":931:1346  function transfer(address to, uint256 value) external returns (bool) {... */\n    tag_68:\n        /* \"contracts/ERCProto.sol\":994:998  bool */\n      0x00\n        /* \"contracts/ERCProto.sol\":1029:1030  0 */\n      dup1\n        /* \"contracts/ERCProto.sol\":1015:1031  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":1015:1017  to */\n      dup4\n        /* \"contracts/ERCProto.sol\":1015:1031  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERCProto.sol\":1011:1085  if (to == address(0)) {... */\n      tag_136\n      jumpi\n        /* \"contracts/ERCProto.sol\":1048:1073  revert(\"Invalid address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_88\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":1011:1085  if (to == address(0)) {... */\n    tag_136:\n        /* \"contracts/ERCProto.sol\":1125:1130  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":1101:1110  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":1101:1122  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1111:1121  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":1101:1122  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":1101:1130  _balances[msg.sender] < value */\n      lt\n        /* \"contracts/ERCProto.sol\":1097:1189  if (_balances[msg.sender] < value) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/ERCProto.sol\":1147:1177  revert(\"Insufficient balance\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_103\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":1097:1189  if (_balances[msg.sender] < value) {... */\n    tag_138:\n        /* \"contracts/ERCProto.sol\":1226:1231  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":1201:1210  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":1201:1222  _balances[msg.sender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1211:1221  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":1201:1222  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":1201:1231  _balances[msg.sender] -= value */\n      dup3\n      dup3\n      sload\n      tag_140\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_140:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":1259:1264  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":1242:1251  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":1242:1255  _balances[to] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1252:1254  to */\n      dup6\n        /* \"contracts/ERCProto.sol\":1242:1255  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":1242:1264  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      tag_141\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_141:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":1304:1306  to */\n      dup3\n        /* \"contracts/ERCProto.sol\":1283:1314  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":1292:1302  msg.sender */\n      caller\n        /* \"contracts/ERCProto.sol\":1283:1314  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERCProto.sol\":1308:1313  value */\n      dup5\n        /* \"contracts/ERCProto.sol\":1283:1314  Transfer(msg.sender, to, value) */\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERCProto.sol\":1334:1338  true */\n      0x01\n        /* \"contracts/ERCProto.sol\":1327:1338  return true */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":931:1346  function transfer(address to, uint256 value) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":1354:1490  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_73:\n        /* \"contracts/ERCProto.sol\":1428:1435  uint256 */\n      0x00\n        /* \"contracts/ERCProto.sol\":1455:1466  _allowances */\n      0x04\n        /* \"contracts/ERCProto.sol\":1455:1473  _allowances[owner] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1467:1472  owner */\n      dup5\n        /* \"contracts/ERCProto.sol\":1455:1473  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":1455:1482  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/ERCProto.sol\":1474:1481  spender */\n      dup4\n        /* \"contracts/ERCProto.sol\":1455:1482  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":1448:1482  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":1354:1490  function allowance(address owner, address spender) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":2882:3290  function _burn(address from, uint256 value) internal returns (bool) {... */\n    tag_128:\n        /* \"contracts/ERCProto.sol\":2944:2948  bool */\n      0x00\n        /* \"contracts/ERCProto.sol\":2979:2983  from */\n      dup3\n        /* \"contracts/ERCProto.sol\":2965:2983  address(0) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":2973:2974  0 */\n      0x00\n        /* \"contracts/ERCProto.sol\":2965:2983  address(0) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERCProto.sol\":2961:3037  if (address(0) == from) {... */\n      tag_159\n      jumpi\n        /* \"contracts/ERCProto.sol\":3000:3025  revert(\"Invalid address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_88\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":2961:3037  if (address(0) == from) {... */\n    tag_159:\n        /* \"contracts/ERCProto.sol\":3079:3084  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":3061:3070  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":3061:3076  _balances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":3071:3075  from */\n      dup6\n        /* \"contracts/ERCProto.sol\":3061:3076  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":3061:3084  _balances[from] < value */\n      lt\n        /* \"contracts/ERCProto.sol\":3057:3259  if (_balances[from] < value) {... */\n      iszero\n      tag_161\n      jumpi\n        /* \"contracts/ERCProto.sol\":3111:3120  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":3111:3126  _balances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":3121:3125  from */\n      dup5\n        /* \"contracts/ERCProto.sol\":3111:3126  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ERCProto.sol\":3101:3107  _total */\n      0x02\n      0x00\n        /* \"contracts/ERCProto.sol\":3101:3126  _total -= _balances[from] */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":3159:3160  0 */\n      0x00\n        /* \"contracts/ERCProto.sol\":3141:3150  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":3141:3156  _balances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":3151:3155  from */\n      dup6\n        /* \"contracts/ERCProto.sol\":3141:3156  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ERCProto.sol\":3141:3160  _balances[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":3057:3259  if (_balances[from] < value) {... */\n      jump(tag_163)\n    tag_161:\n        /* \"contracts/ERCProto.sol\":3203:3208  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":3193:3199  _total */\n      0x02\n      0x00\n        /* \"contracts/ERCProto.sol\":3193:3208  _total -= value */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_164:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":3242:3247  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":3223:3232  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":3223:3238  _balances[from] */\n      0x00\n        /* \"contracts/ERCProto.sol\":3233:3237  from */\n      dup6\n        /* \"contracts/ERCProto.sol\":3223:3238  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":3223:3247  _balances[from] -= value */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":3057:3259  if (_balances[from] < value) {... */\n    tag_163:\n        /* \"contracts/ERCProto.sol\":3278:3282  true */\n      0x01\n        /* \"contracts/ERCProto.sol\":3271:3282  return true */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":2882:3290  function _burn(address from, uint256 value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERCProto.sol\":2573:2874  function _mint(address to, uint256 value) internal returns (bool) {... */\n    tag_134:\n        /* \"contracts/ERCProto.sol\":2633:2637  bool */\n      0x00\n        /* \"contracts/ERCProto.sol\":2668:2669  0 */\n      dup1\n        /* \"contracts/ERCProto.sol\":2654:2670  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":2654:2656  to */\n      dup4\n        /* \"contracts/ERCProto.sol\":2654:2670  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/ERCProto.sol\":2650:2733  if (to == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"contracts/ERCProto.sol\":2687:2721  revert(\"Invalid receiver address\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_97\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERCProto.sol\":2650:2733  if (to == address(0)) {... */\n    tag_167:\n        /* \"contracts/ERCProto.sol\":2755:2760  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2745:2751  _total */\n      0x02\n      0x00\n        /* \"contracts/ERCProto.sol\":2745:2760  _total += value */\n      dup3\n      dup3\n      sload\n      tag_169\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_169:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":2788:2793  value */\n      dup2\n        /* \"contracts/ERCProto.sol\":2771:2780  _balances */\n      0x03\n        /* \"contracts/ERCProto.sol\":2771:2784  _balances[to] */\n      0x00\n        /* \"contracts/ERCProto.sol\":2781:2783  to */\n      dup6\n        /* \"contracts/ERCProto.sol\":2771:2784  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/ERCProto.sol\":2771:2793  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      tag_170\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_170:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERCProto.sol\":2832:2834  to */\n      dup3\n        /* \"contracts/ERCProto.sol\":2811:2842  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ERCProto.sol\":2828:2829  0 */\n      0x00\n        /* \"contracts/ERCProto.sol\":2811:2842  Transfer(address(0), to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERCProto.sol\":2836:2841  value */\n      dup5\n        /* \"contracts/ERCProto.sol\":2811:2842  Transfer(address(0), to, value) */\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERCProto.sol\":2862:2866  true */\n      0x01\n        /* \"contracts/ERCProto.sol\":2855:2866  return true */\n      swap1\n      pop\n        /* \"contracts/ERCProto.sol\":2573:2874  function _mint(address to, uint256 value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_173:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_174:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_175:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_176:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_177:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_212\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_173\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":711:782   */\n      tag_213\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_174\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_214\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_175\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":881:910   */\n      tag_215\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_176\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_217\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_177\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_179:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_181:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_182:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_223\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_181\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_183:\n        /* \"#utility.yul\":1876:1900   */\n      tag_225\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_182\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_226:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_184:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_228\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_183\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_185:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_186:\n        /* \"#utility.yul\":2232:2256   */\n      tag_231\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_185\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_232:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_187:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_234\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_186\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_237\n      tag_179\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2525:2644   */\n    tag_236:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_238\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_184\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_239\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_187\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_188:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_189:\n        /* \"#utility.yul\":3089:3110   */\n      tag_242\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_188\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_244\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_189\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_190:\n        /* \"#utility.yul\":3426:3450   */\n      tag_246\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_185\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_33:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_248\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_190\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_36:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_251\n      tag_179\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3801:3920   */\n    tag_250:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_252\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_184\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_253\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_184\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_254\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_187\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_191:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_192:\n        /* \"#utility.yul\":4491:4513   */\n      tag_257\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_191\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_259\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_192\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_45:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_262\n      tag_179\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4822:4941   */\n    tag_261:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_263\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_184\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_193:\n        /* \"#utility.yul\":5168:5192   */\n      tag_265\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_182\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_53:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_267\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_193\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5762   */\n    tag_63:\n        /* \"#utility.yul\":5492:5498   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5529:5538   */\n      dup3\n        /* \"#utility.yul\":5520:5527   */\n      dup5\n        /* \"#utility.yul\":5516:5539   */\n      sub\n        /* \"#utility.yul\":5512:5544   */\n      slt\n        /* \"#utility.yul\":5509:5628   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":5547:5626   */\n      tag_270\n      tag_179\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5509:5628   */\n    tag_269:\n        /* \"#utility.yul\":5667:5668   */\n      0x00\n        /* \"#utility.yul\":5692:5745   */\n      tag_271\n        /* \"#utility.yul\":5737:5744   */\n      dup5\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5717:5726   */\n      dup6\n        /* \"#utility.yul\":5713:5735   */\n      add\n        /* \"#utility.yul\":5692:5745   */\n      tag_187\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":5682:5745   */\n      swap2\n      pop\n        /* \"#utility.yul\":5638:5755   */\n      pop\n        /* \"#utility.yul\":5433:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_72:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_274\n      tag_179\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5861:5980   */\n    tag_273:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_275\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_184\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_276\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_184\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_194:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_80:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_279:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_281\n      tag_194\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6664:6748   */\n    tag_280:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6925   */\n    tag_195:\n        /* \"#utility.yul\":6900:6917   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6918   */\n      mstore\n        /* \"#utility.yul\":6760:6925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7297   */\n    tag_196:\n        /* \"#utility.yul\":7073:7076   */\n      0x00\n        /* \"#utility.yul\":7094:7161   */\n      tag_284\n        /* \"#utility.yul\":7158:7160   */\n      0x0f\n        /* \"#utility.yul\":7153:7156   */\n      dup4\n        /* \"#utility.yul\":7094:7161   */\n      tag_174\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7087:7161   */\n      swap2\n      pop\n        /* \"#utility.yul\":7170:7263   */\n      tag_285\n        /* \"#utility.yul\":7259:7262   */\n      dup3\n        /* \"#utility.yul\":7170:7263   */\n      tag_195\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7283:7286   */\n      dup3\n        /* \"#utility.yul\":7279:7291   */\n      add\n        /* \"#utility.yul\":7272:7291   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7303:7722   */\n    tag_88:\n        /* \"#utility.yul\":7469:7473   */\n      0x00\n        /* \"#utility.yul\":7507:7509   */\n      0x20\n        /* \"#utility.yul\":7496:7505   */\n      dup3\n        /* \"#utility.yul\":7492:7510   */\n      add\n        /* \"#utility.yul\":7484:7510   */\n      swap1\n      pop\n        /* \"#utility.yul\":7556:7565   */\n      dup2\n        /* \"#utility.yul\":7550:7554   */\n      dup2\n        /* \"#utility.yul\":7546:7566   */\n      sub\n        /* \"#utility.yul\":7542:7543   */\n      0x00\n        /* \"#utility.yul\":7531:7540   */\n      dup4\n        /* \"#utility.yul\":7527:7544   */\n      add\n        /* \"#utility.yul\":7520:7567   */\n      mstore\n        /* \"#utility.yul\":7584:7715   */\n      tag_287\n        /* \"#utility.yul\":7710:7714   */\n      dup2\n        /* \"#utility.yul\":7584:7715   */\n      tag_196\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7576:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7303:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:7900   */\n    tag_197:\n        /* \"#utility.yul\":7868:7892   */\n      0x496e76616c69642073656e646572206164647265737300000000000000000000\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7856:7862   */\n      dup3\n        /* \"#utility.yul\":7852:7866   */\n      add\n        /* \"#utility.yul\":7845:7893   */\n      mstore\n        /* \"#utility.yul\":7728:7900   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:8272   */\n    tag_198:\n        /* \"#utility.yul\":8048:8051   */\n      0x00\n        /* \"#utility.yul\":8069:8136   */\n      tag_290\n        /* \"#utility.yul\":8133:8135   */\n      0x16\n        /* \"#utility.yul\":8128:8131   */\n      dup4\n        /* \"#utility.yul\":8069:8136   */\n      tag_174\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8062:8136   */\n      swap2\n      pop\n        /* \"#utility.yul\":8145:8238   */\n      tag_291\n        /* \"#utility.yul\":8234:8237   */\n      dup3\n        /* \"#utility.yul\":8145:8238   */\n      tag_197\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"#utility.yul\":8258:8261   */\n      dup3\n        /* \"#utility.yul\":8254:8266   */\n      add\n        /* \"#utility.yul\":8247:8266   */\n      swap1\n      pop\n        /* \"#utility.yul\":7906:8272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8278:8697   */\n    tag_94:\n        /* \"#utility.yul\":8444:8448   */\n      0x00\n        /* \"#utility.yul\":8482:8484   */\n      0x20\n        /* \"#utility.yul\":8471:8480   */\n      dup3\n        /* \"#utility.yul\":8467:8485   */\n      add\n        /* \"#utility.yul\":8459:8485   */\n      swap1\n      pop\n        /* \"#utility.yul\":8531:8540   */\n      dup2\n        /* \"#utility.yul\":8525:8529   */\n      dup2\n        /* \"#utility.yul\":8521:8541   */\n      sub\n        /* \"#utility.yul\":8517:8518   */\n      0x00\n        /* \"#utility.yul\":8506:8515   */\n      dup4\n        /* \"#utility.yul\":8502:8519   */\n      add\n        /* \"#utility.yul\":8495:8542   */\n      mstore\n        /* \"#utility.yul\":8559:8690   */\n      tag_293\n        /* \"#utility.yul\":8685:8689   */\n      dup2\n        /* \"#utility.yul\":8559:8690   */\n      tag_198\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8551:8690   */\n      swap1\n      pop\n        /* \"#utility.yul\":8278:8697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:8877   */\n    tag_199:\n        /* \"#utility.yul\":8843:8869   */\n      0x496e76616c696420726563656976657220616464726573730000000000000000\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8831:8837   */\n      dup3\n        /* \"#utility.yul\":8827:8841   */\n      add\n        /* \"#utility.yul\":8820:8870   */\n      mstore\n        /* \"#utility.yul\":8703:8877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8883:9249   */\n    tag_200:\n        /* \"#utility.yul\":9025:9028   */\n      0x00\n        /* \"#utility.yul\":9046:9113   */\n      tag_296\n        /* \"#utility.yul\":9110:9112   */\n      0x18\n        /* \"#utility.yul\":9105:9108   */\n      dup4\n        /* \"#utility.yul\":9046:9113   */\n      tag_174\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9039:9113   */\n      swap2\n      pop\n        /* \"#utility.yul\":9122:9215   */\n      tag_297\n        /* \"#utility.yul\":9211:9214   */\n      dup3\n        /* \"#utility.yul\":9122:9215   */\n      tag_199\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9240:9242   */\n      0x20\n        /* \"#utility.yul\":9235:9238   */\n      dup3\n        /* \"#utility.yul\":9231:9243   */\n      add\n        /* \"#utility.yul\":9224:9243   */\n      swap1\n      pop\n        /* \"#utility.yul\":8883:9249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9255:9674   */\n    tag_97:\n        /* \"#utility.yul\":9421:9425   */\n      0x00\n        /* \"#utility.yul\":9459:9461   */\n      0x20\n        /* \"#utility.yul\":9448:9457   */\n      dup3\n        /* \"#utility.yul\":9444:9462   */\n      add\n        /* \"#utility.yul\":9436:9462   */\n      swap1\n      pop\n        /* \"#utility.yul\":9508:9517   */\n      dup2\n        /* \"#utility.yul\":9502:9506   */\n      dup2\n        /* \"#utility.yul\":9498:9518   */\n      sub\n        /* \"#utility.yul\":9494:9495   */\n      0x00\n        /* \"#utility.yul\":9483:9492   */\n      dup4\n        /* \"#utility.yul\":9479:9496   */\n      add\n        /* \"#utility.yul\":9472:9519   */\n      mstore\n        /* \"#utility.yul\":9536:9667   */\n      tag_299\n        /* \"#utility.yul\":9662:9666   */\n      dup2\n        /* \"#utility.yul\":9536:9667   */\n      tag_200\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9528:9667   */\n      swap1\n      pop\n        /* \"#utility.yul\":9255:9674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9680:9841   */\n    tag_201:\n        /* \"#utility.yul\":9820:9833   */\n      0x4e6f7420616c6c6f776564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9816:9817   */\n      0x00\n        /* \"#utility.yul\":9808:9814   */\n      dup3\n        /* \"#utility.yul\":9804:9818   */\n      add\n        /* \"#utility.yul\":9797:9834   */\n      mstore\n        /* \"#utility.yul\":9680:9841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9847:10213   */\n    tag_202:\n        /* \"#utility.yul\":9989:9992   */\n      0x00\n        /* \"#utility.yul\":10010:10077   */\n      tag_302\n        /* \"#utility.yul\":10074:10076   */\n      0x0b\n        /* \"#utility.yul\":10069:10072   */\n      dup4\n        /* \"#utility.yul\":10010:10077   */\n      tag_174\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10003:10077   */\n      swap2\n      pop\n        /* \"#utility.yul\":10086:10179   */\n      tag_303\n        /* \"#utility.yul\":10175:10178   */\n      dup3\n        /* \"#utility.yul\":10086:10179   */\n      tag_201\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"#utility.yul\":10199:10202   */\n      dup3\n        /* \"#utility.yul\":10195:10207   */\n      add\n        /* \"#utility.yul\":10188:10207   */\n      swap1\n      pop\n        /* \"#utility.yul\":9847:10213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10219:10638   */\n    tag_100:\n        /* \"#utility.yul\":10385:10389   */\n      0x00\n        /* \"#utility.yul\":10423:10425   */\n      0x20\n        /* \"#utility.yul\":10412:10421   */\n      dup3\n        /* \"#utility.yul\":10408:10426   */\n      add\n        /* \"#utility.yul\":10400:10426   */\n      swap1\n      pop\n        /* \"#utility.yul\":10472:10481   */\n      dup2\n        /* \"#utility.yul\":10466:10470   */\n      dup2\n        /* \"#utility.yul\":10462:10482   */\n      sub\n        /* \"#utility.yul\":10458:10459   */\n      0x00\n        /* \"#utility.yul\":10447:10456   */\n      dup4\n        /* \"#utility.yul\":10443:10460   */\n      add\n        /* \"#utility.yul\":10436:10483   */\n      mstore\n        /* \"#utility.yul\":10500:10631   */\n      tag_305\n        /* \"#utility.yul\":10626:10630   */\n      dup2\n        /* \"#utility.yul\":10500:10631   */\n      tag_202\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10492:10631   */\n      swap1\n      pop\n        /* \"#utility.yul\":10219:10638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10644:10814   */\n    tag_203:\n        /* \"#utility.yul\":10784:10806   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":10780:10781   */\n      0x00\n        /* \"#utility.yul\":10772:10778   */\n      dup3\n        /* \"#utility.yul\":10768:10782   */\n      add\n        /* \"#utility.yul\":10761:10807   */\n      mstore\n        /* \"#utility.yul\":10644:10814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10820:11186   */\n    tag_204:\n        /* \"#utility.yul\":10962:10965   */\n      0x00\n        /* \"#utility.yul\":10983:11050   */\n      tag_308\n        /* \"#utility.yul\":11047:11049   */\n      0x14\n        /* \"#utility.yul\":11042:11045   */\n      dup4\n        /* \"#utility.yul\":10983:11050   */\n      tag_174\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":10976:11050   */\n      swap2\n      pop\n        /* \"#utility.yul\":11059:11152   */\n      tag_309\n        /* \"#utility.yul\":11148:11151   */\n      dup3\n        /* \"#utility.yul\":11059:11152   */\n      tag_203\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11177:11179   */\n      0x20\n        /* \"#utility.yul\":11172:11175   */\n      dup3\n        /* \"#utility.yul\":11168:11180   */\n      add\n        /* \"#utility.yul\":11161:11180   */\n      swap1\n      pop\n        /* \"#utility.yul\":10820:11186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11192:11611   */\n    tag_103:\n        /* \"#utility.yul\":11358:11362   */\n      0x00\n        /* \"#utility.yul\":11396:11398   */\n      0x20\n        /* \"#utility.yul\":11385:11394   */\n      dup3\n        /* \"#utility.yul\":11381:11399   */\n      add\n        /* \"#utility.yul\":11373:11399   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11454   */\n      dup2\n        /* \"#utility.yul\":11439:11443   */\n      dup2\n        /* \"#utility.yul\":11435:11455   */\n      sub\n        /* \"#utility.yul\":11431:11432   */\n      0x00\n        /* \"#utility.yul\":11420:11429   */\n      dup4\n        /* \"#utility.yul\":11416:11433   */\n      add\n        /* \"#utility.yul\":11409:11456   */\n      mstore\n        /* \"#utility.yul\":11473:11604   */\n      tag_311\n        /* \"#utility.yul\":11599:11603   */\n      dup2\n        /* \"#utility.yul\":11473:11604   */\n      tag_204\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11465:11604   */\n      swap1\n      pop\n        /* \"#utility.yul\":11192:11611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11617:11797   */\n    tag_205:\n        /* \"#utility.yul\":11665:11742   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11662:11663   */\n      0x00\n        /* \"#utility.yul\":11655:11743   */\n      mstore\n        /* \"#utility.yul\":11762:11766   */\n      0x11\n        /* \"#utility.yul\":11759:11760   */\n      0x04\n        /* \"#utility.yul\":11752:11767   */\n      mstore\n        /* \"#utility.yul\":11786:11790   */\n      0x24\n        /* \"#utility.yul\":11783:11784   */\n      0x00\n        /* \"#utility.yul\":11776:11791   */\n      revert\n        /* \"#utility.yul\":11803:11994   */\n    tag_105:\n        /* \"#utility.yul\":11843:11846   */\n      0x00\n        /* \"#utility.yul\":11862:11882   */\n      tag_314\n        /* \"#utility.yul\":11880:11881   */\n      dup3\n        /* \"#utility.yul\":11862:11882   */\n      tag_185\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11857:11882   */\n      swap2\n      pop\n        /* \"#utility.yul\":11896:11916   */\n      tag_315\n        /* \"#utility.yul\":11914:11915   */\n      dup4\n        /* \"#utility.yul\":11896:11916   */\n      tag_185\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11891:11916   */\n      swap3\n      pop\n        /* \"#utility.yul\":11939:11940   */\n      dup3\n        /* \"#utility.yul\":11936:11937   */\n      dup3\n        /* \"#utility.yul\":11932:11941   */\n      add\n        /* \"#utility.yul\":11925:11941   */\n      swap1\n      pop\n        /* \"#utility.yul\":11960:11963   */\n      dup1\n        /* \"#utility.yul\":11957:11958   */\n      dup3\n        /* \"#utility.yul\":11954:11964   */\n      gt\n        /* \"#utility.yul\":11951:11987   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":11967:11985   */\n      tag_317\n      tag_205\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11951:11987   */\n    tag_316:\n        /* \"#utility.yul\":11803:11994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12000:12194   */\n    tag_107:\n        /* \"#utility.yul\":12040:12044   */\n      0x00\n        /* \"#utility.yul\":12060:12080   */\n      tag_319\n        /* \"#utility.yul\":12078:12079   */\n      dup3\n        /* \"#utility.yul\":12060:12080   */\n      tag_185\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12055:12080   */\n      swap2\n      pop\n        /* \"#utility.yul\":12094:12114   */\n      tag_320\n        /* \"#utility.yul\":12112:12113   */\n      dup4\n        /* \"#utility.yul\":12094:12114   */\n      tag_185\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":12089:12114   */\n      swap3\n      pop\n        /* \"#utility.yul\":12138:12139   */\n      dup3\n        /* \"#utility.yul\":12135:12136   */\n      dup3\n        /* \"#utility.yul\":12131:12140   */\n      sub\n        /* \"#utility.yul\":12123:12140   */\n      swap1\n      pop\n        /* \"#utility.yul\":12162:12163   */\n      dup2\n        /* \"#utility.yul\":12156:12160   */\n      dup2\n        /* \"#utility.yul\":12153:12164   */\n      gt\n        /* \"#utility.yul\":12150:12187   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":12167:12185   */\n      tag_322\n      tag_205\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12150:12187   */\n    tag_321:\n        /* \"#utility.yul\":12000:12194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122085561f5d8198c97464e77c096efb352c0e15c6e061498eb524fe7230d8e67d2864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_683": {
									"entryPoint": null,
									"id": 683,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 287,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:6",
										"nodeType": "YulBlock",
										"src": "0:5817:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "652:40:6",
													"nodeType": "YulBlock",
													"src": "652:40:6",
													"statements": [
														{
															"nativeSrc": "663:22:6",
															"nodeType": "YulAssignment",
															"src": "663:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:6"
																},
																"nativeSrc": "673:12:6",
																"nodeType": "YulFunctionCall",
																"src": "673:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:6",
														"nodeType": "YulTypedName",
														"src": "635:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:6",
														"nodeType": "YulTypedName",
														"src": "645:6:6",
														"type": ""
													}
												],
												"src": "593:99:6"
											},
											{
												"body": {
													"nativeSrc": "726:152:6",
													"nodeType": "YulBlock",
													"src": "726:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "743:1:6",
																		"nodeType": "YulLiteral",
																		"src": "743:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "746:77:6",
																		"nodeType": "YulLiteral",
																		"src": "746:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "736:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:6"
																},
																"nativeSrc": "736:88:6",
																"nodeType": "YulFunctionCall",
																"src": "736:88:6"
															},
															"nativeSrc": "736:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "736:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:6",
																		"nodeType": "YulLiteral",
																		"src": "840:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "843:4:6",
																		"nodeType": "YulLiteral",
																		"src": "843:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:6"
																},
																"nativeSrc": "833:15:6",
																"nodeType": "YulFunctionCall",
																"src": "833:15:6"
															},
															"nativeSrc": "833:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "833:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:6",
																		"nodeType": "YulLiteral",
																		"src": "864:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:4:6",
																		"nodeType": "YulLiteral",
																		"src": "867:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "857:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:6"
																},
																"nativeSrc": "857:15:6",
																"nodeType": "YulFunctionCall",
																"src": "857:15:6"
															},
															"nativeSrc": "857:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "857:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "698:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "698:180:6"
											},
											{
												"body": {
													"nativeSrc": "912:152:6",
													"nodeType": "YulBlock",
													"src": "912:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "929:1:6",
																		"nodeType": "YulLiteral",
																		"src": "929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "932:77:6",
																		"nodeType": "YulLiteral",
																		"src": "932:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "922:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:6"
																},
																"nativeSrc": "922:88:6",
																"nodeType": "YulFunctionCall",
																"src": "922:88:6"
															},
															"nativeSrc": "922:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "922:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1026:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1026:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1029:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1029:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1019:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:6"
																},
																"nativeSrc": "1019:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1019:15:6"
															},
															"nativeSrc": "1019:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1019:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1050:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1050:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1053:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1053:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1043:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:6"
																},
																"nativeSrc": "1043:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1043:15:6"
															},
															"nativeSrc": "1043:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1043:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "884:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "884:180:6"
											},
											{
												"body": {
													"nativeSrc": "1121:269:6",
													"nodeType": "YulBlock",
													"src": "1121:269:6",
													"statements": [
														{
															"nativeSrc": "1131:22:6",
															"nodeType": "YulAssignment",
															"src": "1131:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1145:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1145:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1151:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1151:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1141:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:6"
																},
																"nativeSrc": "1141:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1141:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1131:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:6"
																}
															]
														},
														{
															"nativeSrc": "1162:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1162:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1192:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1192:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1198:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1198:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1188:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:6"
																},
																"nativeSrc": "1188:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1188:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1166:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1166:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1239:51:6",
																"nodeType": "YulBlock",
																"src": "1239:51:6",
																"statements": [
																	{
																		"nativeSrc": "1253:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1253:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1267:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1275:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1275:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1263:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1263:3:6"
																			},
																			"nativeSrc": "1263:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1263:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1253:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1219:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1219:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1212:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																},
																"nativeSrc": "1212:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1212:26:6"
															},
															"nativeSrc": "1209:81:6",
															"nodeType": "YulIf",
															"src": "1209:81:6"
														},
														{
															"body": {
																"nativeSrc": "1342:42:6",
																"nodeType": "YulBlock",
																"src": "1342:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1356:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1356:16:6"
																			},
																			"nativeSrc": "1356:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:18:6"
																		},
																		"nativeSrc": "1356:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1356:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1306:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1306:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1329:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1337:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1337:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1326:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1326:2:6"
																		},
																		"nativeSrc": "1326:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1326:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1303:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1303:2:6"
																},
																"nativeSrc": "1303:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1303:38:6"
															},
															"nativeSrc": "1300:84:6",
															"nodeType": "YulIf",
															"src": "1300:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1070:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1105:4:6",
														"nodeType": "YulTypedName",
														"src": "1105:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1114:6:6",
														"nodeType": "YulTypedName",
														"src": "1114:6:6",
														"type": ""
													}
												],
												"src": "1070:320:6"
											},
											{
												"body": {
													"nativeSrc": "1450:87:6",
													"nodeType": "YulBlock",
													"src": "1450:87:6",
													"statements": [
														{
															"nativeSrc": "1460:11:6",
															"nodeType": "YulAssignment",
															"src": "1460:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "1468:3:6",
																"nodeType": "YulIdentifier",
																"src": "1468:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1460:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1460:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1488:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1488:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1491:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:6"
																},
																"nativeSrc": "1481:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1481:14:6"
															},
															"nativeSrc": "1481:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1481:14:6"
														},
														{
															"nativeSrc": "1504:26:6",
															"nodeType": "YulAssignment",
															"src": "1504:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1522:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1525:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1525:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1512:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1512:9:6"
																},
																"nativeSrc": "1512:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1512:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1504:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1504:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1396:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1437:3:6",
														"nodeType": "YulTypedName",
														"src": "1437:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1445:4:6",
														"nodeType": "YulTypedName",
														"src": "1445:4:6",
														"type": ""
													}
												],
												"src": "1396:141:6"
											},
											{
												"body": {
													"nativeSrc": "1587:49:6",
													"nodeType": "YulBlock",
													"src": "1587:49:6",
													"statements": [
														{
															"nativeSrc": "1597:33:6",
															"nodeType": "YulAssignment",
															"src": "1597:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1615:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1622:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:6"
																		},
																		"nativeSrc": "1611:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:6"
																},
																"nativeSrc": "1607:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1607:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "1543:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1570:5:6",
														"nodeType": "YulTypedName",
														"src": "1570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1580:6:6",
														"nodeType": "YulTypedName",
														"src": "1580:6:6",
														"type": ""
													}
												],
												"src": "1543:93:6"
											},
											{
												"body": {
													"nativeSrc": "1695:54:6",
													"nodeType": "YulBlock",
													"src": "1695:54:6",
													"statements": [
														{
															"nativeSrc": "1705:37:6",
															"nodeType": "YulAssignment",
															"src": "1705:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1730:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1730:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1736:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1726:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:6"
																},
																"nativeSrc": "1726:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1726:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1705:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "1705:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1642:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1670:4:6",
														"nodeType": "YulTypedName",
														"src": "1670:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1676:5:6",
														"nodeType": "YulTypedName",
														"src": "1676:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1686:8:6",
														"nodeType": "YulTypedName",
														"src": "1686:8:6",
														"type": ""
													}
												],
												"src": "1642:107:6"
											},
											{
												"body": {
													"nativeSrc": "1831:317:6",
													"nodeType": "YulBlock",
													"src": "1831:317:6",
													"statements": [
														{
															"nativeSrc": "1841:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1841:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1862:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1862:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1874:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1858:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:6"
																},
																"nativeSrc": "1858:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1858:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1845:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1845:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1885:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1885:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1916:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1916:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:66:6",
																		"nodeType": "YulLiteral",
																		"src": "1927:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1897:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1897:18:6"
																},
																"nativeSrc": "1897:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1897:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1889:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1889:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2003:51:6",
															"nodeType": "YulAssignment",
															"src": "2003:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2034:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2034:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2045:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2045:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2015:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2015:18:6"
																},
																"nativeSrc": "2015:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2015:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2003:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2003:8:6"
																}
															]
														},
														{
															"nativeSrc": "2063:30:6",
															"nodeType": "YulAssignment",
															"src": "2063:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2076:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2076:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2087:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2087:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2083:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:6"
																		},
																		"nativeSrc": "2083:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2083:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2072:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2072:3:6"
																},
																"nativeSrc": "2072:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2072:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2063:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2063:5:6"
																}
															]
														},
														{
															"nativeSrc": "2102:40:6",
															"nodeType": "YulAssignment",
															"src": "2102:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2115:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2115:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2126:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2126:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2136:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2136:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2122:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:6"
																		},
																		"nativeSrc": "2122:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2112:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2112:2:6"
																},
																"nativeSrc": "2112:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2112:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2102:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1755:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1792:5:6",
														"nodeType": "YulTypedName",
														"src": "1792:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1799:10:6",
														"nodeType": "YulTypedName",
														"src": "1799:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1811:8:6",
														"nodeType": "YulTypedName",
														"src": "1811:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1824:6:6",
														"nodeType": "YulTypedName",
														"src": "1824:6:6",
														"type": ""
													}
												],
												"src": "1755:393:6"
											},
											{
												"body": {
													"nativeSrc": "2199:32:6",
													"nodeType": "YulBlock",
													"src": "2199:32:6",
													"statements": [
														{
															"nativeSrc": "2209:16:6",
															"nodeType": "YulAssignment",
															"src": "2209:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2220:5:6",
																"nodeType": "YulIdentifier",
																"src": "2220:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2209:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2209:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2154:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2181:5:6",
														"nodeType": "YulTypedName",
														"src": "2181:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2191:7:6",
														"nodeType": "YulTypedName",
														"src": "2191:7:6",
														"type": ""
													}
												],
												"src": "2154:77:6"
											},
											{
												"body": {
													"nativeSrc": "2269:28:6",
													"nodeType": "YulBlock",
													"src": "2269:28:6",
													"statements": [
														{
															"nativeSrc": "2279:12:6",
															"nodeType": "YulAssignment",
															"src": "2279:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2286:5:6",
																"nodeType": "YulIdentifier",
																"src": "2286:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2279:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2237:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2255:5:6",
														"nodeType": "YulTypedName",
														"src": "2255:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2265:3:6",
														"nodeType": "YulTypedName",
														"src": "2265:3:6",
														"type": ""
													}
												],
												"src": "2237:60:6"
											},
											{
												"body": {
													"nativeSrc": "2363:82:6",
													"nodeType": "YulBlock",
													"src": "2363:82:6",
													"statements": [
														{
															"nativeSrc": "2373:66:6",
															"nodeType": "YulAssignment",
															"src": "2373:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2431:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2431:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2413:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2413:17:6"
																				},
																				"nativeSrc": "2413:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2404:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2404:8:6"
																		},
																		"nativeSrc": "2404:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2386:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2386:17:6"
																},
																"nativeSrc": "2386:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2386:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2373:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2373:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2303:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2343:5:6",
														"nodeType": "YulTypedName",
														"src": "2343:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2353:9:6",
														"nodeType": "YulTypedName",
														"src": "2353:9:6",
														"type": ""
													}
												],
												"src": "2303:142:6"
											},
											{
												"body": {
													"nativeSrc": "2498:28:6",
													"nodeType": "YulBlock",
													"src": "2498:28:6",
													"statements": [
														{
															"nativeSrc": "2508:12:6",
															"nodeType": "YulAssignment",
															"src": "2508:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2515:5:6",
																"nodeType": "YulIdentifier",
																"src": "2515:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2508:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2451:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2484:5:6",
														"nodeType": "YulTypedName",
														"src": "2484:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2494:3:6",
														"nodeType": "YulTypedName",
														"src": "2494:3:6",
														"type": ""
													}
												],
												"src": "2451:75:6"
											},
											{
												"body": {
													"nativeSrc": "2608:193:6",
													"nodeType": "YulBlock",
													"src": "2608:193:6",
													"statements": [
														{
															"nativeSrc": "2618:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2618:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "2673:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2642:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2642:30:6"
																},
																"nativeSrc": "2642:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2642:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2622:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2622:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2697:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2697:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2737:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "2737:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2731:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "2731:5:6"
																				},
																				"nativeSrc": "2731:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2744:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2776:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "2776:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2752:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "2752:23:6"
																				},
																				"nativeSrc": "2752:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2752:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2703:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "2703:27:6"
																		},
																		"nativeSrc": "2703:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2703:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2690:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:6"
																},
																"nativeSrc": "2690:105:6",
																"nodeType": "YulFunctionCall",
																"src": "2690:105:6"
															},
															"nativeSrc": "2690:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "2690:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2532:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2585:4:6",
														"nodeType": "YulTypedName",
														"src": "2585:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2591:6:6",
														"nodeType": "YulTypedName",
														"src": "2591:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2599:7:6",
														"nodeType": "YulTypedName",
														"src": "2599:7:6",
														"type": ""
													}
												],
												"src": "2532:269:6"
											},
											{
												"body": {
													"nativeSrc": "2856:24:6",
													"nodeType": "YulBlock",
													"src": "2856:24:6",
													"statements": [
														{
															"nativeSrc": "2866:8:6",
															"nodeType": "YulAssignment",
															"src": "2866:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "2873:1:6",
																"nodeType": "YulLiteral",
																"src": "2873:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2866:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2807:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2852:3:6",
														"nodeType": "YulTypedName",
														"src": "2852:3:6",
														"type": ""
													}
												],
												"src": "2807:73:6"
											},
											{
												"body": {
													"nativeSrc": "2939:136:6",
													"nodeType": "YulBlock",
													"src": "2939:136:6",
													"statements": [
														{
															"nativeSrc": "2949:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2963:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2963:30:6"
																},
																"nativeSrc": "2963:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2963:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2953:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2953:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3048:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3048:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3054:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3054:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3062:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3062:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3004:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3004:43:6"
																},
																"nativeSrc": "3004:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3004:65:6"
															},
															"nativeSrc": "3004:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3004:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2886:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2925:4:6",
														"nodeType": "YulTypedName",
														"src": "2925:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2931:6:6",
														"nodeType": "YulTypedName",
														"src": "2931:6:6",
														"type": ""
													}
												],
												"src": "2886:189:6"
											},
											{
												"body": {
													"nativeSrc": "3131:136:6",
													"nodeType": "YulBlock",
													"src": "3131:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3198:63:6",
																"nodeType": "YulBlock",
																"src": "3198:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3242:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3242:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3249:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3249:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3212:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "3212:29:6"
																			},
																			"nativeSrc": "3212:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3212:39:6"
																		},
																		"nativeSrc": "3212:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3151:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3151:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3158:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3158:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3148:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:6"
																},
																"nativeSrc": "3148:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3148:14:6"
															},
															"nativeSrc": "3141:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3163:26:6",
																"nodeType": "YulBlock",
																"src": "3163:26:6",
																"statements": [
																	{
																		"nativeSrc": "3165:22:6",
																		"nodeType": "YulAssignment",
																		"src": "3165:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3178:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3178:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3185:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3185:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3174:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3174:3:6"
																			},
																			"nativeSrc": "3174:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3174:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3165:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3165:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3145:2:6",
																"nodeType": "YulBlock",
																"src": "3145:2:6",
																"statements": []
															},
															"src": "3141:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3081:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3119:5:6",
														"nodeType": "YulTypedName",
														"src": "3119:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3126:3:6",
														"nodeType": "YulTypedName",
														"src": "3126:3:6",
														"type": ""
													}
												],
												"src": "3081:186:6"
											},
											{
												"body": {
													"nativeSrc": "3352:464:6",
													"nodeType": "YulBlock",
													"src": "3352:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3378:431:6",
																"nodeType": "YulBlock",
																"src": "3378:431:6",
																"statements": [
																	{
																		"nativeSrc": "3392:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3392:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3440:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3440:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3408:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "3408:31:6"
																			},
																			"nativeSrc": "3408:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3396:8:6",
																				"nodeType": "YulTypedName",
																				"src": "3396:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3459:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3459:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3482:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3482:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3510:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "3510:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3492:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "3492:17:6"
																					},
																					"nativeSrc": "3492:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3492:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3478:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3478:3:6"
																			},
																			"nativeSrc": "3478:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3478:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3463:11:6",
																				"nodeType": "YulTypedName",
																				"src": "3463:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3679:27:6",
																			"nodeType": "YulBlock",
																			"src": "3679:27:6",
																			"statements": [
																				{
																					"nativeSrc": "3681:23:6",
																					"nodeType": "YulAssignment",
																					"src": "3681:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3696:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "3696:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3681:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "3681:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3663:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "3663:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3675:2:6",
																					"nodeType": "YulLiteral",
																					"src": "3675:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3660:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "3660:2:6"
																			},
																			"nativeSrc": "3660:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3660:18:6"
																		},
																		"nativeSrc": "3657:49:6",
																		"nodeType": "YulIf",
																		"src": "3657:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3748:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "3748:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3765:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "3765:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3793:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "3793:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3775:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "3775:17:6"
																							},
																							"nativeSrc": "3775:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "3775:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3761:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3761:3:6"
																					},
																					"nativeSrc": "3761:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3761:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3719:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "3719:28:6"
																			},
																			"nativeSrc": "3719:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:80:6"
																		},
																		"nativeSrc": "3719:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3369:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3374:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3366:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3366:2:6"
																},
																"nativeSrc": "3366:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3366:11:6"
															},
															"nativeSrc": "3363:446:6",
															"nodeType": "YulIf",
															"src": "3363:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3273:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3328:5:6",
														"nodeType": "YulTypedName",
														"src": "3328:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3335:3:6",
														"nodeType": "YulTypedName",
														"src": "3335:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3340:10:6",
														"nodeType": "YulTypedName",
														"src": "3340:10:6",
														"type": ""
													}
												],
												"src": "3273:543:6"
											},
											{
												"body": {
													"nativeSrc": "3885:54:6",
													"nodeType": "YulBlock",
													"src": "3885:54:6",
													"statements": [
														{
															"nativeSrc": "3895:37:6",
															"nodeType": "YulAssignment",
															"src": "3895:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3920:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3920:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3926:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3926:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3916:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:6"
																},
																"nativeSrc": "3916:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3916:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3895:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3895:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3822:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3860:4:6",
														"nodeType": "YulTypedName",
														"src": "3860:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3866:5:6",
														"nodeType": "YulTypedName",
														"src": "3866:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3876:8:6",
														"nodeType": "YulTypedName",
														"src": "3876:8:6",
														"type": ""
													}
												],
												"src": "3822:117:6"
											},
											{
												"body": {
													"nativeSrc": "3996:118:6",
													"nodeType": "YulBlock",
													"src": "3996:118:6",
													"statements": [
														{
															"nativeSrc": "4006:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4055:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4055:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4058:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4058:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4051:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4051:3:6"
																				},
																				"nativeSrc": "4051:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4051:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4070:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4070:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4066:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:6"
																				},
																				"nativeSrc": "4066:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4066:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4022:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4022:28:6"
																		},
																		"nativeSrc": "4022:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4022:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4018:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4018:3:6"
																},
																"nativeSrc": "4018:56:6",
																"nodeType": "YulFunctionCall",
																"src": "4018:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4010:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4010:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4083:25:6",
															"nodeType": "YulAssignment",
															"src": "4083:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4097:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4097:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4103:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4103:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4093:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:6"
																},
																"nativeSrc": "4093:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4093:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4083:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3945:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3973:4:6",
														"nodeType": "YulTypedName",
														"src": "3973:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3979:5:6",
														"nodeType": "YulTypedName",
														"src": "3979:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3989:6:6",
														"nodeType": "YulTypedName",
														"src": "3989:6:6",
														"type": ""
													}
												],
												"src": "3945:169:6"
											},
											{
												"body": {
													"nativeSrc": "4200:214:6",
													"nodeType": "YulBlock",
													"src": "4200:214:6",
													"statements": [
														{
															"nativeSrc": "4333:37:6",
															"nodeType": "YulAssignment",
															"src": "4333:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4360:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4360:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4366:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4341:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4341:18:6"
																},
																"nativeSrc": "4341:29:6",
																"nodeType": "YulFunctionCall",
																"src": "4341:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4333:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4333:4:6"
																}
															]
														},
														{
															"nativeSrc": "4379:29:6",
															"nodeType": "YulAssignment",
															"src": "4379:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4390:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4390:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4400:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4400:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4403:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4396:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4396:3:6"
																		},
																		"nativeSrc": "4396:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4396:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4387:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4387:2:6"
																},
																"nativeSrc": "4387:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4387:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4379:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4119:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4181:4:6",
														"nodeType": "YulTypedName",
														"src": "4181:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4187:3:6",
														"nodeType": "YulTypedName",
														"src": "4187:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4195:4:6",
														"nodeType": "YulTypedName",
														"src": "4195:4:6",
														"type": ""
													}
												],
												"src": "4119:295:6"
											},
											{
												"body": {
													"nativeSrc": "4511:1303:6",
													"nodeType": "YulBlock",
													"src": "4511:1303:6",
													"statements": [
														{
															"nativeSrc": "4522:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4522:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4569:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4536:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "4536:32:6"
																},
																"nativeSrc": "4536:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4536:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4526:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4526:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4658:22:6",
																"nodeType": "YulBlock",
																"src": "4658:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4660:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4660:16:6"
																			},
																			"nativeSrc": "4660:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4660:18:6"
																		},
																		"nativeSrc": "4660:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4660:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4630:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4630:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4638:18:6",
																		"nodeType": "YulLiteral",
																		"src": "4638:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4627:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4627:2:6"
																},
																"nativeSrc": "4627:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4627:30:6"
															},
															"nativeSrc": "4624:56:6",
															"nodeType": "YulIf",
															"src": "4624:56:6"
														},
														{
															"nativeSrc": "4690:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4690:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4736:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4736:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4730:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "4730:5:6"
																		},
																		"nativeSrc": "4730:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4730:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4704:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "4704:25:6"
																},
																"nativeSrc": "4704:38:6",
																"nodeType": "YulFunctionCall",
																"src": "4704:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4694:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4694:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4835:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4835:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4841:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4841:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4849:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4789:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "4789:45:6"
																},
																"nativeSrc": "4789:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4789:67:6"
															},
															"nativeSrc": "4789:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4789:67:6"
														},
														{
															"nativeSrc": "4866:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4866:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4883:1:6",
																"nodeType": "YulLiteral",
																"src": "4883:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4870:9:6",
																	"nodeType": "YulTypedName",
																	"src": "4870:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4894:17:6",
															"nodeType": "YulAssignment",
															"src": "4894:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4907:4:6",
																"nodeType": "YulLiteral",
																"src": "4907:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4894:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4958:611:6",
																		"nodeType": "YulBlock",
																		"src": "4958:611:6",
																		"statements": [
																			{
																				"nativeSrc": "4972:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4972:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4991:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4991:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5003:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5003:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4999:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "4999:3:6"
																							},
																							"nativeSrc": "4999:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4999:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4987:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4987:3:6"
																					},
																					"nativeSrc": "4987:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4987:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4976:7:6",
																						"nodeType": "YulTypedName",
																						"src": "4976:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5023:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5023:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5069:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5069:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5037:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "5037:31:6"
																					},
																					"nativeSrc": "5037:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5037:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5027:6:6",
																						"nodeType": "YulTypedName",
																						"src": "5027:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5087:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5087:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5096:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5096:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5091:1:6",
																						"nodeType": "YulTypedName",
																						"src": "5091:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5155:163:6",
																					"nodeType": "YulBlock",
																					"src": "5155:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5180:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5180:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5198:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "5198:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5203:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "5203:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5194:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5194:3:6"
																												},
																												"nativeSrc": "5194:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5194:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5188:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "5188:5:6"
																										},
																										"nativeSrc": "5188:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5188:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5173:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5173:6:6"
																								},
																								"nativeSrc": "5173:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5173:42:6"
																							},
																							"nativeSrc": "5173:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5173:42:6"
																						},
																						{
																							"nativeSrc": "5232:24:6",
																							"nodeType": "YulAssignment",
																							"src": "5232:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5246:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5246:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5254:1:6",
																										"nodeType": "YulLiteral",
																										"src": "5254:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5242:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5242:3:6"
																								},
																								"nativeSrc": "5242:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5242:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5232:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5232:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5273:31:6",
																							"nodeType": "YulAssignment",
																							"src": "5273:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5290:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "5290:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5301:2:6",
																										"nodeType": "YulLiteral",
																										"src": "5301:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5286:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5286:3:6"
																								},
																								"nativeSrc": "5286:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5286:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5273:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "5273:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5121:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "5121:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5124:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5124:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5118:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5118:2:6"
																					},
																					"nativeSrc": "5118:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5118:14:6"
																				},
																				"nativeSrc": "5110:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5133:21:6",
																					"nodeType": "YulBlock",
																					"src": "5133:21:6",
																					"statements": [
																						{
																							"nativeSrc": "5135:17:6",
																							"nodeType": "YulAssignment",
																							"src": "5135:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5144:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "5144:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5147:4:6",
																										"nodeType": "YulLiteral",
																										"src": "5147:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5140:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5140:3:6"
																								},
																								"nativeSrc": "5140:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5140:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5135:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "5135:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5114:3:6",
																					"nodeType": "YulBlock",
																					"src": "5114:3:6",
																					"statements": []
																				},
																				"src": "5110:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "5354:156:6",
																					"nodeType": "YulBlock",
																					"src": "5354:156:6",
																					"statements": [
																						{
																							"nativeSrc": "5372:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5372:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5399:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5399:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5404:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5404:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5395:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5395:3:6"
																										},
																										"nativeSrc": "5395:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5395:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5389:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5389:5:6"
																								},
																								"nativeSrc": "5389:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5389:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5376:9:6",
																									"nodeType": "YulTypedName",
																									"src": "5376:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5439:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5439:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5466:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5466:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5481:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "5481:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5489:4:6",
																														"nodeType": "YulLiteral",
																														"src": "5489:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5477:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5477:3:6"
																												},
																												"nativeSrc": "5477:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5477:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5447:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "5447:18:6"
																										},
																										"nativeSrc": "5447:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5447:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5432:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5432:6:6"
																								},
																								"nativeSrc": "5432:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5432:64:6"
																							},
																							"nativeSrc": "5432:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5432:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5337:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5337:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5346:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5346:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5334:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5334:2:6"
																					},
																					"nativeSrc": "5334:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5334:19:6"
																				},
																				"nativeSrc": "5331:179:6",
																				"nodeType": "YulIf",
																				"src": "5331:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5530:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5530:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5544:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "5544:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5552:1:6",
																											"nodeType": "YulLiteral",
																											"src": "5552:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5540:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "5540:3:6"
																									},
																									"nativeSrc": "5540:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "5540:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5556:1:6",
																									"nodeType": "YulLiteral",
																									"src": "5556:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5536:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5536:3:6"
																							},
																							"nativeSrc": "5536:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5536:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5523:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5523:6:6"
																					},
																					"nativeSrc": "5523:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5523:36:6"
																				},
																				"nativeSrc": "5523:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5523:36:6"
																			}
																		]
																	},
																	"nativeSrc": "4951:618:6",
																	"nodeType": "YulCase",
																	"src": "4951:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4956:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4956:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5586:222:6",
																		"nodeType": "YulBlock",
																		"src": "5586:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5600:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5600:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5613:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5604:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5604:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5637:67:6",
																					"nodeType": "YulBlock",
																					"src": "5637:67:6",
																					"statements": [
																						{
																							"nativeSrc": "5655:35:6",
																							"nodeType": "YulAssignment",
																							"src": "5655:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5674:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5674:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5679:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5679:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5670:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5670:3:6"
																										},
																										"nativeSrc": "5670:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5670:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5664:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5664:5:6"
																								},
																								"nativeSrc": "5664:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5664:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5655:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5655:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5630:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5630:6:6"
																				},
																				"nativeSrc": "5627:77:6",
																				"nodeType": "YulIf",
																				"src": "5627:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5724:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5724:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5783:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5783:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5790:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5790:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5730:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "5730:52:6"
																							},
																							"nativeSrc": "5730:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5730:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5717:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5717:6:6"
																					},
																					"nativeSrc": "5717:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5717:81:6"
																				},
																				"nativeSrc": "5717:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5717:81:6"
																			}
																		]
																	},
																	"nativeSrc": "5578:230:6",
																	"nodeType": "YulCase",
																	"src": "5578:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4931:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4931:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4939:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4939:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4928:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4928:2:6"
																},
																"nativeSrc": "4928:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4928:14:6"
															},
															"nativeSrc": "4921:887:6",
															"nodeType": "YulSwitch",
															"src": "4921:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4419:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4500:4:6",
														"nodeType": "YulTypedName",
														"src": "4500:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4506:3:6",
														"nodeType": "YulTypedName",
														"src": "4506:3:6",
														"type": ""
													}
												],
												"src": "4419:1395:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610221565b60405180910390fd5b6100908161011f60201b60201c565b506040518060400160405280600781526020017f54657374455243000000000000000000000000000000000000000000000000008152505f90816100d49190610474565b506040518060400160405280600481526020017f5445524300000000000000000000000000000000000000000000000000000000815250600190816101199190610474565b50610543565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61020b826101e2565b9050919050565b61021b81610201565b82525050565b5f6020820190506102345f830184610212565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102b557607f821691505b6020821081036102c8576102c7610271565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261032a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ef565b61033486836102ef565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61037861037361036e8461034c565b610355565b61034c565b9050919050565b5f819050919050565b6103918361035e565b6103a561039d8261037f565b8484546102fb565b825550505050565b5f90565b6103b96103ad565b6103c4818484610388565b505050565b5b818110156103e7576103dc5f826103b1565b6001810190506103ca565b5050565b601f82111561042c576103fd816102ce565b610406846102e0565b81016020851015610415578190505b610429610421856102e0565b8301826103c9565b50505b505050565b5f82821c905092915050565b5f61044c5f1984600802610431565b1980831691505092915050565b5f610464838361043d565b9150826002028217905092915050565b61047d8261023a565b67ffffffffffffffff81111561049657610495610244565b5b6104a0825461029e565b6104ab8282856103eb565b5f60209050601f8311600181146104dc575f84156104ca578287015190505b6104d48582610459565b86555061053b565b601f1984166104ea866102ce565b5f5b82811015610511578489015182556001820191506020850194506020810190506104ec565b8683101561052e578489015161052a601f89168261043d565b8355505b6001600288020188555050505b505050505050565b611802806105505f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063a0712d6811610064578063a0712d681461024c578063a9059cbb1461027c578063dd62ed3e146102ac578063f2fde38b146102dc576100e8565b80638da5cb5b146101e057806395d89b41146101fe5780639dc29fac1461021c576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806370a08231146101a6578063715018a6146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102f8565b604051610101919061124a565b60405180910390f35b610124600480360381019061011f91906112fb565b610387565b6040516101319190611353565b60405180910390f35b61014261055f565b60405161014f919061137b565b60405180910390f35b610172600480360381019061016d9190611394565b610568565b60405161017f9190611353565b60405180910390f35b61019061091b565b60405161019d91906113ff565b60405180910390f35b6101c060048036038101906101bb9190611418565b610923565b6040516101cd919061137b565b60405180910390f35b6101de610969565b005b6101e861097c565b6040516101f59190611452565b60405180910390f35b6102066109a4565b604051610213919061124a565b60405180910390f35b610236600480360381019061023191906112fb565b610a34565b6040516102439190611353565b60405180910390f35b6102666004803603810190610261919061146b565b610a4f565b6040516102739190611353565b60405180910390f35b610296600480360381019061029191906112fb565b610a70565b6040516102a39190611353565b60405180910390f35b6102c660048036038101906102c19190611496565b610c74565b6040516102d3919061137b565b60405180910390f35b6102f660048036038101906102f19190611418565b610cf6565b005b60605f805461030690611501565b80601f016020809104026020016040519081016040528092919081815260200182805461033290611501565b801561037d5780601f106103545761010080835404028352916020019161037d565b820191905f5260205f20905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed9061157b565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161054d919061137b565b60405180910390a36001905092915050565b5f600254905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce906115e3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c9061164b565b60405180910390fd5b8160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f7906116b3565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610780576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107779061171b565b60405180910390fd5b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107cc9190611766565b925050819055508160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461081f9190611799565b925050819055508160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610908919061137b565b60405180910390a3600190509392505050565b5f6012905090565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610971610d7a565b61097a5f610e01565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109b390611501565b80601f01602080910402602001604051908101604052809291908181526020018280546109df90611501565b8015610a2a5780601f10610a0157610100808354040283529160200191610a2a565b820191905f5260205f20905b815481529060010190602001808311610a0d57829003601f168201915b5050505050905090565b5f610a3d610d7a565b610a478383610ec4565b905092915050565b5f610a58610d7a565b610a69610a6361097c565b8361108a565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad69061157b565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b569061171b565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bab9190611799565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bfe9190611766565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c62919061137b565b60405180910390a36001905092915050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610cfe610d7a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d6e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d659190611452565b60405180910390fd5b610d7781610e01565b50565b610d826111d3565b73ffffffffffffffffffffffffffffffffffffffff16610da061097c565b73ffffffffffffffffffffffffffffffffffffffff1614610dff57610dc36111d3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610df69190611452565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff1603610f33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2a9061157b565b60405180910390fd5b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156110145760035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460025f828254610fc69190611799565b925050819055505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611080565b8160025f8282546110259190611799565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110789190611799565b925050819055505b6001905092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f09061164b565b60405180910390fd5b8160025f82825461110a9190611766565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461115d9190611766565b925050819055508273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111c1919061137b565b60405180910390a36001905092915050565b5f33905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61121c826111da565b61122681856111e4565b93506112368185602086016111f4565b61123f81611202565b840191505092915050565b5f6020820190508181035f8301526112628184611212565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112978261126e565b9050919050565b6112a78161128d565b81146112b1575f80fd5b50565b5f813590506112c28161129e565b92915050565b5f819050919050565b6112da816112c8565b81146112e4575f80fd5b50565b5f813590506112f5816112d1565b92915050565b5f80604083850312156113115761131061126a565b5b5f61131e858286016112b4565b925050602061132f858286016112e7565b9150509250929050565b5f8115159050919050565b61134d81611339565b82525050565b5f6020820190506113665f830184611344565b92915050565b611375816112c8565b82525050565b5f60208201905061138e5f83018461136c565b92915050565b5f805f606084860312156113ab576113aa61126a565b5b5f6113b8868287016112b4565b93505060206113c9868287016112b4565b92505060406113da868287016112e7565b9150509250925092565b5f60ff82169050919050565b6113f9816113e4565b82525050565b5f6020820190506114125f8301846113f0565b92915050565b5f6020828403121561142d5761142c61126a565b5b5f61143a848285016112b4565b91505092915050565b61144c8161128d565b82525050565b5f6020820190506114655f830184611443565b92915050565b5f602082840312156114805761147f61126a565b5b5f61148d848285016112e7565b91505092915050565b5f80604083850312156114ac576114ab61126a565b5b5f6114b9858286016112b4565b92505060206114ca858286016112b4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151857607f821691505b60208210810361152b5761152a6114d4565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611565600f836111e4565b915061157082611531565b602082019050919050565b5f6020820190508181035f83015261159281611559565b9050919050565b7f496e76616c69642073656e6465722061646472657373000000000000000000005f82015250565b5f6115cd6016836111e4565b91506115d882611599565b602082019050919050565b5f6020820190508181035f8301526115fa816115c1565b9050919050565b7f496e76616c6964207265636569766572206164647265737300000000000000005f82015250565b5f6116356018836111e4565b915061164082611601565b602082019050919050565b5f6020820190508181035f83015261166281611629565b9050919050565b7f4e6f7420616c6c6f7765640000000000000000000000000000000000000000005f82015250565b5f61169d600b836111e4565b91506116a882611669565b602082019050919050565b5f6020820190508181035f8301526116ca81611691565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6117056014836111e4565b9150611710826116d1565b602082019050919050565b5f6020820190508181035f830152611732816116f9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611770826112c8565b915061177b836112c8565b925082820190508082111561179357611792611739565b5b92915050565b5f6117a3826112c8565b91506117ae836112c8565b92508282039050818111156117c6576117c5611739565b5b9291505056fea264697066735822122085561f5d8198c97464e77c096efb352c0e15c6e061498eb524fe7230d8e67d2864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x11F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5465737445524300000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH0 SWAP1 DUP2 PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5445524300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP2 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x474 JUMP JUMPDEST POP PUSH2 0x543 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20B DUP3 PUSH2 0x1E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B DUP2 PUSH2 0x201 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x234 PUSH0 DUP4 ADD DUP5 PUSH2 0x212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C8 JUMPI PUSH2 0x2C7 PUSH2 0x271 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x32A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x334 DUP7 DUP4 PUSH2 0x2EF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x378 PUSH2 0x373 PUSH2 0x36E DUP5 PUSH2 0x34C JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x391 DUP4 PUSH2 0x35E JUMP JUMPDEST PUSH2 0x3A5 PUSH2 0x39D DUP3 PUSH2 0x37F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2FB JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3B9 PUSH2 0x3AD JUMP JUMPDEST PUSH2 0x3C4 DUP2 DUP5 DUP5 PUSH2 0x388 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E7 JUMPI PUSH2 0x3DC PUSH0 DUP3 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3CA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x42C JUMPI PUSH2 0x3FD DUP2 PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x406 DUP5 PUSH2 0x2E0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x415 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x429 PUSH2 0x421 DUP6 PUSH2 0x2E0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3C9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x44C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x431 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x464 DUP4 DUP4 PUSH2 0x43D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x47D DUP3 PUSH2 0x23A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH2 0x495 PUSH2 0x244 JUMP JUMPDEST JUMPDEST PUSH2 0x4A0 DUP3 SLOAD PUSH2 0x29E JUMP JUMPDEST PUSH2 0x4AB DUP3 DUP3 DUP6 PUSH2 0x3EB JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4DC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4CA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4D4 DUP6 DUP3 PUSH2 0x459 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x53B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4EA DUP7 PUSH2 0x2CE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x511 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4EC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x52E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x52A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x43D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1802 DUP1 PUSH2 0x550 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x21C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x969 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x306 SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x332 SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x37D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x354 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x360 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63C SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x971 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x97A PUSH0 PUSH2 0xE01 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9B3 SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9DF SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA2A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA2A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA0D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA3D PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xA47 DUP4 DUP4 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA58 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xA69 PUSH2 0xA63 PUSH2 0x97C JUMP JUMPDEST DUP4 PUSH2 0x108A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFE PUSH2 0xD7A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0xE01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD82 PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA0 PUSH2 0x97C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFF JUMPI PUSH2 0xDC3 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2A SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1014 JUMPI PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1080 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F0 SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x110A SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11C1 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x121C DUP3 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x1226 DUP2 DUP6 PUSH2 0x11E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1236 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x123F DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1262 DUP2 DUP5 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 DUP3 PUSH2 0x126E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x12B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C2 DUP2 PUSH2 0x129E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F5 DUP2 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x131E DUP6 DUP3 DUP7 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132F DUP6 DUP3 DUP7 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1366 PUSH0 DUP4 ADD DUP5 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138E PUSH0 DUP4 ADD DUP5 PUSH2 0x136C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH2 0x13AA PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B8 DUP7 DUP3 DUP8 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13C9 DUP7 DUP3 DUP8 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13DA DUP7 DUP3 DUP8 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1412 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142D JUMPI PUSH2 0x142C PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x143A DUP5 DUP3 DUP6 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1465 PUSH0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH2 0x147F PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148D DUP5 DUP3 DUP6 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B9 DUP6 DUP3 DUP7 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14CA DUP6 DUP3 DUP7 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1518 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1565 PUSH1 0xF DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1570 DUP3 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1592 DUP2 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656E646572206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15CD PUSH1 0x16 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D8 DUP3 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15FA DUP2 PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563656976657220616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1635 PUSH1 0x18 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1640 DUP3 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1662 DUP2 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x169D PUSH1 0xB DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A8 DUP3 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16CA DUP2 PUSH2 0x1691 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1705 PUSH1 0x14 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1710 DUP3 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1732 DUP2 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1770 DUP3 PUSH2 0x12C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x177B DUP4 PUSH2 0x12C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A3 DUP3 PUSH2 0x12C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE DUP4 PUSH2 0x12C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x17C6 JUMPI PUSH2 0x17C5 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 JUMP 0x1F TSTORE DUP2 SWAP9 0xC9 PUSH21 0x64E77C096EFB352C0E15C6E061498EB524FE7230D8 0xE6 PUSH30 0x2864736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "145:404:5:-:0;;;190:97;;;;;;;;;;212:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;235:17:5::1;;;;;;;;;;;;;;;;::::0;:5:::1;:17;;;;;;:::i;:::-;;263:16;;;;;;;;;;;;;;;;::::0;:7:::1;:16;;;;;;:::i;:::-;;145:404:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;145:404:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burn_658": {
									"entryPoint": 3780,
									"id": 658,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 3450,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_604": {
									"entryPoint": 4234,
									"id": 604,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_263": {
									"entryPoint": 4563,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3585,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_421": {
									"entryPoint": 3188,
									"id": 421,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_470": {
									"entryPoint": 903,
									"id": 470,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_349": {
									"entryPoint": 2339,
									"id": 349,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_718": {
									"entryPoint": 2612,
									"id": 718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_329": {
									"entryPoint": 2331,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_700": {
									"entryPoint": 2639,
									"id": 700,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_313": {
									"entryPoint": 760,
									"id": 313,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2428,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2409,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_321": {
									"entryPoint": 2468,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_337": {
									"entryPoint": 1375,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_561": {
									"entryPoint": 1384,
									"id": 561,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3318,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_405": {
									"entryPoint": 2672,
									"id": 405,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 5841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd": {
									"entryPoint": 5737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f": {
									"entryPoint": 5529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12197:6",
										"nodeType": "YulBlock",
										"src": "0:12197:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5146:53:6",
													"nodeType": "YulBlock",
													"src": "5146:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:6"
																		},
																		"nativeSrc": "5168:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:6"
																},
																"nativeSrc": "5156:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:6"
															},
															"nativeSrc": "5156:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:6",
														"nodeType": "YulTypedName",
														"src": "5134:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:6",
														"nodeType": "YulTypedName",
														"src": "5141:3:6",
														"type": ""
													}
												],
												"src": "5081:118:6"
											},
											{
												"body": {
													"nativeSrc": "5303:124:6",
													"nodeType": "YulBlock",
													"src": "5303:124:6",
													"statements": [
														{
															"nativeSrc": "5313:26:6",
															"nodeType": "YulAssignment",
															"src": "5313:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:6"
																},
																"nativeSrc": "5321:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:6"
																		},
																		"nativeSrc": "5402:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:6"
																},
																"nativeSrc": "5349:71:6",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:6"
															},
															"nativeSrc": "5349:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:6",
														"nodeType": "YulTypedName",
														"src": "5275:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:6",
														"nodeType": "YulTypedName",
														"src": "5287:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:6",
														"nodeType": "YulTypedName",
														"src": "5298:4:6",
														"type": ""
													}
												],
												"src": "5205:222:6"
											},
											{
												"body": {
													"nativeSrc": "5499:263:6",
													"nodeType": "YulBlock",
													"src": "5499:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5545:83:6",
																"nodeType": "YulBlock",
																"src": "5545:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5547:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5547:77:6"
																			},
																			"nativeSrc": "5547:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5547:79:6"
																		},
																		"nativeSrc": "5547:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5547:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5520:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5520:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5516:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5516:3:6"
																		},
																		"nativeSrc": "5516:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5516:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5512:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5512:3:6"
																},
																"nativeSrc": "5512:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5512:32:6"
															},
															"nativeSrc": "5509:119:6",
															"nodeType": "YulIf",
															"src": "5509:119:6"
														},
														{
															"nativeSrc": "5638:117:6",
															"nodeType": "YulBlock",
															"src": "5638:117:6",
															"statements": [
																{
																	"nativeSrc": "5653:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5653:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5667:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5667:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5657:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5657:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5682:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5682:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5717:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5717:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5728:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5728:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5713:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5713:3:6"
																				},
																				"nativeSrc": "5713:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5713:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5737:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5737:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5692:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5692:20:6"
																		},
																		"nativeSrc": "5692:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5682:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5682:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5433:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5469:9:6",
														"nodeType": "YulTypedName",
														"src": "5469:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5480:7:6",
														"nodeType": "YulTypedName",
														"src": "5480:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5492:6:6",
														"nodeType": "YulTypedName",
														"src": "5492:6:6",
														"type": ""
													}
												],
												"src": "5433:329:6"
											},
											{
												"body": {
													"nativeSrc": "5851:391:6",
													"nodeType": "YulBlock",
													"src": "5851:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:6",
																"nodeType": "YulBlock",
																"src": "5897:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:6"
																			},
																			"nativeSrc": "5899:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:6"
																		},
																		"nativeSrc": "5899:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:6"
																		},
																		"nativeSrc": "5868:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:6"
																},
																"nativeSrc": "5864:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:6"
															},
															"nativeSrc": "5861:119:6",
															"nodeType": "YulIf",
															"src": "5861:119:6"
														},
														{
															"nativeSrc": "5990:117:6",
															"nodeType": "YulBlock",
															"src": "5990:117:6",
															"statements": [
																{
																	"nativeSrc": "6005:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:6"
																				},
																				"nativeSrc": "6065:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:6"
																		},
																		"nativeSrc": "6044:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:6",
															"nodeType": "YulBlock",
															"src": "6117:118:6",
															"statements": [
																{
																	"nativeSrc": "6132:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:6"
																				},
																				"nativeSrc": "6193:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:6"
																		},
																		"nativeSrc": "6172:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:6",
														"nodeType": "YulTypedName",
														"src": "5813:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:6",
														"nodeType": "YulTypedName",
														"src": "5824:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:6",
														"nodeType": "YulTypedName",
														"src": "5836:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:6",
														"nodeType": "YulTypedName",
														"src": "5844:6:6",
														"type": ""
													}
												],
												"src": "5768:474:6"
											},
											{
												"body": {
													"nativeSrc": "6276:152:6",
													"nodeType": "YulBlock",
													"src": "6276:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:6"
																},
																"nativeSrc": "6286:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:6"
															},
															"nativeSrc": "6286:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:6"
																},
																"nativeSrc": "6383:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:6"
															},
															"nativeSrc": "6383:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:6"
																},
																"nativeSrc": "6407:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:6"
															},
															"nativeSrc": "6407:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:6"
											},
											{
												"body": {
													"nativeSrc": "6485:269:6",
													"nodeType": "YulBlock",
													"src": "6485:269:6",
													"statements": [
														{
															"nativeSrc": "6495:22:6",
															"nodeType": "YulAssignment",
															"src": "6495:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:6"
																},
																"nativeSrc": "6505:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:6"
																}
															]
														},
														{
															"nativeSrc": "6526:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:6"
																},
																"nativeSrc": "6552:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:6",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:6",
																"nodeType": "YulBlock",
																"src": "6603:51:6",
																"statements": [
																	{
																		"nativeSrc": "6617:27:6",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:6",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:6"
																			},
																			"nativeSrc": "6627:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:6"
																},
																"nativeSrc": "6576:26:6",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:6"
															},
															"nativeSrc": "6573:81:6",
															"nodeType": "YulIf",
															"src": "6573:81:6"
														},
														{
															"body": {
																"nativeSrc": "6706:42:6",
																"nodeType": "YulBlock",
																"src": "6706:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:6"
																			},
																			"nativeSrc": "6720:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:6"
																		},
																		"nativeSrc": "6720:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:6"
																		},
																		"nativeSrc": "6690:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:6"
																},
																"nativeSrc": "6667:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:6"
															},
															"nativeSrc": "6664:84:6",
															"nodeType": "YulIf",
															"src": "6664:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:6",
														"nodeType": "YulTypedName",
														"src": "6469:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:6",
														"nodeType": "YulTypedName",
														"src": "6478:6:6",
														"type": ""
													}
												],
												"src": "6434:320:6"
											},
											{
												"body": {
													"nativeSrc": "6866:59:6",
													"nodeType": "YulBlock",
													"src": "6866:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:6"
																		},
																		"nativeSrc": "6884:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:6"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "6900:17:6",
																		"nodeType": "YulLiteral",
																		"src": "6900:17:6",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:6"
																},
																"nativeSrc": "6877:41:6",
																"nodeType": "YulFunctionCall",
																"src": "6877:41:6"
															},
															"nativeSrc": "6877:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "6877:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "6760:165:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:6",
														"nodeType": "YulTypedName",
														"src": "6858:6:6",
														"type": ""
													}
												],
												"src": "6760:165:6"
											},
											{
												"body": {
													"nativeSrc": "7077:220:6",
													"nodeType": "YulBlock",
													"src": "7077:220:6",
													"statements": [
														{
															"nativeSrc": "7087:74:6",
															"nodeType": "YulAssignment",
															"src": "7087:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7153:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7153:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7158:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7158:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7094:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7094:58:6"
																},
																"nativeSrc": "7094:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7094:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7087:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7087:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7259:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "7170:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7170:88:6"
																},
																"nativeSrc": "7170:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7170:93:6"
															},
															"nativeSrc": "7170:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7170:93:6"
														},
														{
															"nativeSrc": "7272:19:6",
															"nodeType": "YulAssignment",
															"src": "7272:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7283:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7283:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7288:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7279:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:6"
																},
																"nativeSrc": "7279:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7279:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7272:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7272:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6931:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7065:3:6",
														"nodeType": "YulTypedName",
														"src": "7065:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7073:3:6",
														"nodeType": "YulTypedName",
														"src": "7073:3:6",
														"type": ""
													}
												],
												"src": "6931:366:6"
											},
											{
												"body": {
													"nativeSrc": "7474:248:6",
													"nodeType": "YulBlock",
													"src": "7474:248:6",
													"statements": [
														{
															"nativeSrc": "7484:26:6",
															"nodeType": "YulAssignment",
															"src": "7484:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7496:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7496:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7507:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7507:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7492:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:6"
																},
																"nativeSrc": "7492:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7492:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7484:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7484:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7531:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7531:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7542:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7542:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7527:3:6"
																		},
																		"nativeSrc": "7527:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7527:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7550:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7550:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7556:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7556:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7546:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:6"
																		},
																		"nativeSrc": "7546:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7546:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7520:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:6"
																},
																"nativeSrc": "7520:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7520:47:6"
															},
															"nativeSrc": "7520:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7520:47:6"
														},
														{
															"nativeSrc": "7576:139:6",
															"nodeType": "YulAssignment",
															"src": "7576:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7710:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7710:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7584:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7584:124:6"
																},
																"nativeSrc": "7584:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7584:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7576:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7576:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7303:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7454:9:6",
														"nodeType": "YulTypedName",
														"src": "7454:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7469:4:6",
														"nodeType": "YulTypedName",
														"src": "7469:4:6",
														"type": ""
													}
												],
												"src": "7303:419:6"
											},
											{
												"body": {
													"nativeSrc": "7834:66:6",
													"nodeType": "YulBlock",
													"src": "7834:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7856:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7856:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7864:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7864:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7852:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7852:3:6"
																		},
																		"nativeSrc": "7852:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7852:14:6"
																	},
																	{
																		"hexValue": "496e76616c69642073656e6465722061646472657373",
																		"kind": "string",
																		"nativeSrc": "7868:24:6",
																		"nodeType": "YulLiteral",
																		"src": "7868:24:6",
																		"type": "",
																		"value": "Invalid sender address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7845:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7845:6:6"
																},
																"nativeSrc": "7845:48:6",
																"nodeType": "YulFunctionCall",
																"src": "7845:48:6"
															},
															"nativeSrc": "7845:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "7845:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
												"nativeSrc": "7728:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7826:6:6",
														"nodeType": "YulTypedName",
														"src": "7826:6:6",
														"type": ""
													}
												],
												"src": "7728:172:6"
											},
											{
												"body": {
													"nativeSrc": "8052:220:6",
													"nodeType": "YulBlock",
													"src": "8052:220:6",
													"statements": [
														{
															"nativeSrc": "8062:74:6",
															"nodeType": "YulAssignment",
															"src": "8062:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8128:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8128:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8133:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8133:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8069:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8069:58:6"
																},
																"nativeSrc": "8069:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8069:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8062:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8062:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8234:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8234:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																	"nativeSrc": "8145:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8145:88:6"
																},
																"nativeSrc": "8145:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8145:93:6"
															},
															"nativeSrc": "8145:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8145:93:6"
														},
														{
															"nativeSrc": "8247:19:6",
															"nodeType": "YulAssignment",
															"src": "8247:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8258:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8258:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8263:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8254:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8254:3:6"
																},
																"nativeSrc": "8254:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8254:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8247:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7906:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8040:3:6",
														"nodeType": "YulTypedName",
														"src": "8040:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8048:3:6",
														"nodeType": "YulTypedName",
														"src": "8048:3:6",
														"type": ""
													}
												],
												"src": "7906:366:6"
											},
											{
												"body": {
													"nativeSrc": "8449:248:6",
													"nodeType": "YulBlock",
													"src": "8449:248:6",
													"statements": [
														{
															"nativeSrc": "8459:26:6",
															"nodeType": "YulAssignment",
															"src": "8459:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8471:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8471:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8482:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8467:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8467:3:6"
																},
																"nativeSrc": "8467:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8467:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8459:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8459:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8506:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8506:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8517:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8517:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8502:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8502:3:6"
																		},
																		"nativeSrc": "8502:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8502:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8525:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8525:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8531:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8531:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8521:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8521:3:6"
																		},
																		"nativeSrc": "8521:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8521:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8495:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8495:6:6"
																},
																"nativeSrc": "8495:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8495:47:6"
															},
															"nativeSrc": "8495:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8495:47:6"
														},
														{
															"nativeSrc": "8551:139:6",
															"nodeType": "YulAssignment",
															"src": "8551:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8685:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8685:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8559:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8559:124:6"
																},
																"nativeSrc": "8559:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8559:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8551:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8551:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8278:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8429:9:6",
														"nodeType": "YulTypedName",
														"src": "8429:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8444:4:6",
														"nodeType": "YulTypedName",
														"src": "8444:4:6",
														"type": ""
													}
												],
												"src": "8278:419:6"
											},
											{
												"body": {
													"nativeSrc": "8809:68:6",
													"nodeType": "YulBlock",
													"src": "8809:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8831:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8831:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8839:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8839:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8827:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8827:3:6"
																		},
																		"nativeSrc": "8827:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8827:14:6"
																	},
																	{
																		"hexValue": "496e76616c69642072656365697665722061646472657373",
																		"kind": "string",
																		"nativeSrc": "8843:26:6",
																		"nodeType": "YulLiteral",
																		"src": "8843:26:6",
																		"type": "",
																		"value": "Invalid receiver address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8820:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8820:6:6"
																},
																"nativeSrc": "8820:50:6",
																"nodeType": "YulFunctionCall",
																"src": "8820:50:6"
															},
															"nativeSrc": "8820:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "8820:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
												"nativeSrc": "8703:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8801:6:6",
														"nodeType": "YulTypedName",
														"src": "8801:6:6",
														"type": ""
													}
												],
												"src": "8703:174:6"
											},
											{
												"body": {
													"nativeSrc": "9029:220:6",
													"nodeType": "YulBlock",
													"src": "9029:220:6",
													"statements": [
														{
															"nativeSrc": "9039:74:6",
															"nodeType": "YulAssignment",
															"src": "9039:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9105:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9105:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9110:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9110:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9046:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9046:58:6"
																},
																"nativeSrc": "9046:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9046:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9039:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9039:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9211:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9211:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																	"nativeSrc": "9122:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9122:88:6"
																},
																"nativeSrc": "9122:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9122:93:6"
															},
															"nativeSrc": "9122:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9122:93:6"
														},
														{
															"nativeSrc": "9224:19:6",
															"nodeType": "YulAssignment",
															"src": "9224:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9235:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9235:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9240:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9231:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9231:3:6"
																},
																"nativeSrc": "9231:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9231:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9224:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8883:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9017:3:6",
														"nodeType": "YulTypedName",
														"src": "9017:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9025:3:6",
														"nodeType": "YulTypedName",
														"src": "9025:3:6",
														"type": ""
													}
												],
												"src": "8883:366:6"
											},
											{
												"body": {
													"nativeSrc": "9426:248:6",
													"nodeType": "YulBlock",
													"src": "9426:248:6",
													"statements": [
														{
															"nativeSrc": "9436:26:6",
															"nodeType": "YulAssignment",
															"src": "9436:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9448:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9448:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9459:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9444:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:6"
																},
																"nativeSrc": "9444:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9444:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9436:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9436:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9483:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9483:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9494:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9494:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9479:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9479:3:6"
																		},
																		"nativeSrc": "9479:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9479:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9502:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9502:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9508:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9508:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9498:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:6"
																		},
																		"nativeSrc": "9498:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9498:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9472:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:6"
																},
																"nativeSrc": "9472:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9472:47:6"
															},
															"nativeSrc": "9472:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9472:47:6"
														},
														{
															"nativeSrc": "9528:139:6",
															"nodeType": "YulAssignment",
															"src": "9528:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9662:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9662:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9536:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9536:124:6"
																},
																"nativeSrc": "9536:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9536:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9528:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9528:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9255:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9406:9:6",
														"nodeType": "YulTypedName",
														"src": "9406:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9421:4:6",
														"nodeType": "YulTypedName",
														"src": "9421:4:6",
														"type": ""
													}
												],
												"src": "9255:419:6"
											},
											{
												"body": {
													"nativeSrc": "9786:55:6",
													"nodeType": "YulBlock",
													"src": "9786:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9808:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9808:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9816:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9816:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9804:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9804:3:6"
																		},
																		"nativeSrc": "9804:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9804:14:6"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "9820:13:6",
																		"nodeType": "YulLiteral",
																		"src": "9820:13:6",
																		"type": "",
																		"value": "Not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9797:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9797:6:6"
																},
																"nativeSrc": "9797:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9797:37:6"
															},
															"nativeSrc": "9797:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9797:37:6"
														}
													]
												},
												"name": "store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
												"nativeSrc": "9680:161:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9778:6:6",
														"nodeType": "YulTypedName",
														"src": "9778:6:6",
														"type": ""
													}
												],
												"src": "9680:161:6"
											},
											{
												"body": {
													"nativeSrc": "9993:220:6",
													"nodeType": "YulBlock",
													"src": "9993:220:6",
													"statements": [
														{
															"nativeSrc": "10003:74:6",
															"nodeType": "YulAssignment",
															"src": "10003:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10069:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10069:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10074:2:6",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10010:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10010:58:6"
																},
																"nativeSrc": "10010:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10010:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10003:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10003:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10175:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10175:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																	"nativeSrc": "10086:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10086:88:6"
																},
																"nativeSrc": "10086:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10086:93:6"
															},
															"nativeSrc": "10086:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10086:93:6"
														},
														{
															"nativeSrc": "10188:19:6",
															"nodeType": "YulAssignment",
															"src": "10188:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10199:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10199:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10204:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10195:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10195:3:6"
																},
																"nativeSrc": "10195:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10195:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10188:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10188:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9847:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9981:3:6",
														"nodeType": "YulTypedName",
														"src": "9981:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9989:3:6",
														"nodeType": "YulTypedName",
														"src": "9989:3:6",
														"type": ""
													}
												],
												"src": "9847:366:6"
											},
											{
												"body": {
													"nativeSrc": "10390:248:6",
													"nodeType": "YulBlock",
													"src": "10390:248:6",
													"statements": [
														{
															"nativeSrc": "10400:26:6",
															"nodeType": "YulAssignment",
															"src": "10400:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10412:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10412:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10423:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10423:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10408:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:6"
																},
																"nativeSrc": "10408:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10408:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10400:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10400:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10447:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10447:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10458:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10458:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10443:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10443:3:6"
																		},
																		"nativeSrc": "10443:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10443:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10466:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10466:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10472:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10472:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10462:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10462:3:6"
																		},
																		"nativeSrc": "10462:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10462:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10436:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10436:6:6"
																},
																"nativeSrc": "10436:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10436:47:6"
															},
															"nativeSrc": "10436:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10436:47:6"
														},
														{
															"nativeSrc": "10492:139:6",
															"nodeType": "YulAssignment",
															"src": "10492:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10626:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10626:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10500:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10500:124:6"
																},
																"nativeSrc": "10500:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10500:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10492:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10492:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10219:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10370:9:6",
														"nodeType": "YulTypedName",
														"src": "10370:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10385:4:6",
														"nodeType": "YulTypedName",
														"src": "10385:4:6",
														"type": ""
													}
												],
												"src": "10219:419:6"
											},
											{
												"body": {
													"nativeSrc": "10750:64:6",
													"nodeType": "YulBlock",
													"src": "10750:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10772:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10772:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10780:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10780:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10768:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10768:3:6"
																		},
																		"nativeSrc": "10768:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10768:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "10784:22:6",
																		"nodeType": "YulLiteral",
																		"src": "10784:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:6"
																},
																"nativeSrc": "10761:46:6",
																"nodeType": "YulFunctionCall",
																"src": "10761:46:6"
															},
															"nativeSrc": "10761:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "10761:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "10644:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10742:6:6",
														"nodeType": "YulTypedName",
														"src": "10742:6:6",
														"type": ""
													}
												],
												"src": "10644:170:6"
											},
											{
												"body": {
													"nativeSrc": "10966:220:6",
													"nodeType": "YulBlock",
													"src": "10966:220:6",
													"statements": [
														{
															"nativeSrc": "10976:74:6",
															"nodeType": "YulAssignment",
															"src": "10976:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11042:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11042:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11047:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11047:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10983:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10983:58:6"
																},
																"nativeSrc": "10983:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10983:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10976:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10976:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11148:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11148:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "11059:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11059:88:6"
																},
																"nativeSrc": "11059:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11059:93:6"
															},
															"nativeSrc": "11059:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11059:93:6"
														},
														{
															"nativeSrc": "11161:19:6",
															"nodeType": "YulAssignment",
															"src": "11161:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11172:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11172:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11177:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11177:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11168:3:6"
																},
																"nativeSrc": "11168:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11168:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11161:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11161:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10820:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10954:3:6",
														"nodeType": "YulTypedName",
														"src": "10954:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10962:3:6",
														"nodeType": "YulTypedName",
														"src": "10962:3:6",
														"type": ""
													}
												],
												"src": "10820:366:6"
											},
											{
												"body": {
													"nativeSrc": "11363:248:6",
													"nodeType": "YulBlock",
													"src": "11363:248:6",
													"statements": [
														{
															"nativeSrc": "11373:26:6",
															"nodeType": "YulAssignment",
															"src": "11373:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11385:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11385:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11396:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11396:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11381:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11381:3:6"
																},
																"nativeSrc": "11381:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11381:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11373:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11373:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11420:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11420:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11431:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11431:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11416:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11416:3:6"
																		},
																		"nativeSrc": "11416:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11416:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11439:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11439:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11445:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11445:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11435:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11435:3:6"
																		},
																		"nativeSrc": "11435:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11435:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11409:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11409:6:6"
																},
																"nativeSrc": "11409:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11409:47:6"
															},
															"nativeSrc": "11409:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11409:47:6"
														},
														{
															"nativeSrc": "11465:139:6",
															"nodeType": "YulAssignment",
															"src": "11465:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11599:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11599:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11473:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11473:124:6"
																},
																"nativeSrc": "11473:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11473:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11465:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11465:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11192:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11343:9:6",
														"nodeType": "YulTypedName",
														"src": "11343:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11358:4:6",
														"nodeType": "YulTypedName",
														"src": "11358:4:6",
														"type": ""
													}
												],
												"src": "11192:419:6"
											},
											{
												"body": {
													"nativeSrc": "11645:152:6",
													"nodeType": "YulBlock",
													"src": "11645:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11662:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11662:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11665:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11665:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11655:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11655:6:6"
																},
																"nativeSrc": "11655:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11655:88:6"
															},
															"nativeSrc": "11655:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11655:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11759:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11759:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11762:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11762:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11752:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11752:6:6"
																},
																"nativeSrc": "11752:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11752:15:6"
															},
															"nativeSrc": "11752:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11752:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11783:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11783:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11786:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11786:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11776:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11776:6:6"
																},
																"nativeSrc": "11776:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11776:15:6"
															},
															"nativeSrc": "11776:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11776:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11617:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11617:180:6"
											},
											{
												"body": {
													"nativeSrc": "11847:147:6",
													"nodeType": "YulBlock",
													"src": "11847:147:6",
													"statements": [
														{
															"nativeSrc": "11857:25:6",
															"nodeType": "YulAssignment",
															"src": "11857:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11880:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11880:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11862:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11862:17:6"
																},
																"nativeSrc": "11862:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11862:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11857:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11857:1:6"
																}
															]
														},
														{
															"nativeSrc": "11891:25:6",
															"nodeType": "YulAssignment",
															"src": "11891:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11914:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11914:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11896:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11896:17:6"
																},
																"nativeSrc": "11896:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11896:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11891:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11891:1:6"
																}
															]
														},
														{
															"nativeSrc": "11925:16:6",
															"nodeType": "YulAssignment",
															"src": "11925:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11936:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11936:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11939:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11939:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11932:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11932:3:6"
																},
																"nativeSrc": "11932:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11932:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11925:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11925:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11965:22:6",
																"nodeType": "YulBlock",
																"src": "11965:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11967:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11967:16:6"
																			},
																			"nativeSrc": "11967:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11967:18:6"
																		},
																		"nativeSrc": "11967:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11967:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11957:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11957:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11960:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11960:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11954:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11954:2:6"
																},
																"nativeSrc": "11954:10:6",
																"nodeType": "YulFunctionCall",
																"src": "11954:10:6"
															},
															"nativeSrc": "11951:36:6",
															"nodeType": "YulIf",
															"src": "11951:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11803:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11834:1:6",
														"nodeType": "YulTypedName",
														"src": "11834:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11837:1:6",
														"nodeType": "YulTypedName",
														"src": "11837:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11843:3:6",
														"nodeType": "YulTypedName",
														"src": "11843:3:6",
														"type": ""
													}
												],
												"src": "11803:191:6"
											},
											{
												"body": {
													"nativeSrc": "12045:149:6",
													"nodeType": "YulBlock",
													"src": "12045:149:6",
													"statements": [
														{
															"nativeSrc": "12055:25:6",
															"nodeType": "YulAssignment",
															"src": "12055:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12078:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12078:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12060:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12060:17:6"
																},
																"nativeSrc": "12060:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12060:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12055:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12055:1:6"
																}
															]
														},
														{
															"nativeSrc": "12089:25:6",
															"nodeType": "YulAssignment",
															"src": "12089:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12112:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12112:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12094:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "12094:17:6"
																},
																"nativeSrc": "12094:20:6",
																"nodeType": "YulFunctionCall",
																"src": "12094:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12089:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "12089:1:6"
																}
															]
														},
														{
															"nativeSrc": "12123:17:6",
															"nodeType": "YulAssignment",
															"src": "12123:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12135:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12135:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12138:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12138:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12131:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12131:3:6"
																},
																"nativeSrc": "12131:9:6",
																"nodeType": "YulFunctionCall",
																"src": "12131:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12123:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12123:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12165:22:6",
																"nodeType": "YulBlock",
																"src": "12165:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12167:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12167:16:6"
																			},
																			"nativeSrc": "12167:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12167:18:6"
																		},
																		"nativeSrc": "12167:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12167:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12156:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12156:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12162:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "12162:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12153:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12153:2:6"
																},
																"nativeSrc": "12153:11:6",
																"nodeType": "YulFunctionCall",
																"src": "12153:11:6"
															},
															"nativeSrc": "12150:37:6",
															"nodeType": "YulIf",
															"src": "12150:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12000:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12031:1:6",
														"nodeType": "YulTypedName",
														"src": "12031:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12034:1:6",
														"nodeType": "YulTypedName",
														"src": "12034:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12040:4:6",
														"nodeType": "YulTypedName",
														"src": "12040:4:6",
														"type": ""
													}
												],
												"src": "12000:194:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid sender address\")\n\n    }\n\n    function abi_encode_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid receiver address\")\n\n    }\n\n    function abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80638da5cb5b1161008a578063a0712d6811610064578063a0712d681461024c578063a9059cbb1461027c578063dd62ed3e146102ac578063f2fde38b146102dc576100e8565b80638da5cb5b146101e057806395d89b41146101fe5780639dc29fac1461021c576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806370a08231146101a6578063715018a6146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102f8565b604051610101919061124a565b60405180910390f35b610124600480360381019061011f91906112fb565b610387565b6040516101319190611353565b60405180910390f35b61014261055f565b60405161014f919061137b565b60405180910390f35b610172600480360381019061016d9190611394565b610568565b60405161017f9190611353565b60405180910390f35b61019061091b565b60405161019d91906113ff565b60405180910390f35b6101c060048036038101906101bb9190611418565b610923565b6040516101cd919061137b565b60405180910390f35b6101de610969565b005b6101e861097c565b6040516101f59190611452565b60405180910390f35b6102066109a4565b604051610213919061124a565b60405180910390f35b610236600480360381019061023191906112fb565b610a34565b6040516102439190611353565b60405180910390f35b6102666004803603810190610261919061146b565b610a4f565b6040516102739190611353565b60405180910390f35b610296600480360381019061029191906112fb565b610a70565b6040516102a39190611353565b60405180910390f35b6102c660048036038101906102c19190611496565b610c74565b6040516102d3919061137b565b60405180910390f35b6102f660048036038101906102f19190611418565b610cf6565b005b60605f805461030690611501565b80601f016020809104026020016040519081016040528092919081815260200182805461033290611501565b801561037d5780601f106103545761010080835404028352916020019161037d565b820191905f5260205f20905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed9061157b565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161054d919061137b565b60405180910390a36001905092915050565b5f600254905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ce906115e3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c9061164b565b60405180910390fd5b8160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f7906116b3565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610780576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107779061171b565b60405180910390fd5b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107cc9190611766565b925050819055508160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461081f9190611799565b925050819055508160045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610908919061137b565b60405180910390a3600190509392505050565b5f6012905090565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610971610d7a565b61097a5f610e01565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546109b390611501565b80601f01602080910402602001604051908101604052809291908181526020018280546109df90611501565b8015610a2a5780601f10610a0157610100808354040283529160200191610a2a565b820191905f5260205f20905b815481529060010190602001808311610a0d57829003601f168201915b5050505050905090565b5f610a3d610d7a565b610a478383610ec4565b905092915050565b5f610a58610d7a565b610a69610a6361097c565b8361108a565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610adf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad69061157b565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b569061171b565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bab9190611799565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610bfe9190611766565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c62919061137b565b60405180910390a36001905092915050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610cfe610d7a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d6e575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d659190611452565b60405180910390fd5b610d7781610e01565b50565b610d826111d3565b73ffffffffffffffffffffffffffffffffffffffff16610da061097c565b73ffffffffffffffffffffffffffffffffffffffff1614610dff57610dc36111d3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610df69190611452565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff1603610f33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2a9061157b565b60405180910390fd5b8160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156110145760035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460025f828254610fc69190611799565b925050819055505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611080565b8160025f8282546110259190611799565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110789190611799565b925050819055505b6001905092915050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f09061164b565b60405180910390fd5b8160025f82825461110a9190611766565b925050819055508160035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461115d9190611766565b925050819055508273ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111c1919061137b565b60405180910390a36001905092915050565b5f33905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61121c826111da565b61122681856111e4565b93506112368185602086016111f4565b61123f81611202565b840191505092915050565b5f6020820190508181035f8301526112628184611212565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112978261126e565b9050919050565b6112a78161128d565b81146112b1575f80fd5b50565b5f813590506112c28161129e565b92915050565b5f819050919050565b6112da816112c8565b81146112e4575f80fd5b50565b5f813590506112f5816112d1565b92915050565b5f80604083850312156113115761131061126a565b5b5f61131e858286016112b4565b925050602061132f858286016112e7565b9150509250929050565b5f8115159050919050565b61134d81611339565b82525050565b5f6020820190506113665f830184611344565b92915050565b611375816112c8565b82525050565b5f60208201905061138e5f83018461136c565b92915050565b5f805f606084860312156113ab576113aa61126a565b5b5f6113b8868287016112b4565b93505060206113c9868287016112b4565b92505060406113da868287016112e7565b9150509250925092565b5f60ff82169050919050565b6113f9816113e4565b82525050565b5f6020820190506114125f8301846113f0565b92915050565b5f6020828403121561142d5761142c61126a565b5b5f61143a848285016112b4565b91505092915050565b61144c8161128d565b82525050565b5f6020820190506114655f830184611443565b92915050565b5f602082840312156114805761147f61126a565b5b5f61148d848285016112e7565b91505092915050565b5f80604083850312156114ac576114ab61126a565b5b5f6114b9858286016112b4565b92505060206114ca858286016112b4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151857607f821691505b60208210810361152b5761152a6114d4565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611565600f836111e4565b915061157082611531565b602082019050919050565b5f6020820190508181035f83015261159281611559565b9050919050565b7f496e76616c69642073656e6465722061646472657373000000000000000000005f82015250565b5f6115cd6016836111e4565b91506115d882611599565b602082019050919050565b5f6020820190508181035f8301526115fa816115c1565b9050919050565b7f496e76616c6964207265636569766572206164647265737300000000000000005f82015250565b5f6116356018836111e4565b915061164082611601565b602082019050919050565b5f6020820190508181035f83015261166281611629565b9050919050565b7f4e6f7420616c6c6f7765640000000000000000000000000000000000000000005f82015250565b5f61169d600b836111e4565b91506116a882611669565b602082019050919050565b5f6020820190508181035f8301526116ca81611691565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6117056014836111e4565b9150611710826116d1565b602082019050919050565b5f6020820190508181035f830152611732816116f9565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611770826112c8565b915061177b836112c8565b925082820190508082111561179357611792611739565b5b92915050565b5f6117a3826112c8565b91506117ae836112c8565b92508282039050818111156117c6576117c5611739565b5b9291505056fea264697066735822122085561f5d8198c97464e77c096efb352c0e15c6e061498eb524fe7230d8e67d2864736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DC JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x21C JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D6 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x923 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x969 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E8 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x124A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x146B JUMP JUMPDEST PUSH2 0xA4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C1 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F1 SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0xCF6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x306 SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x332 SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x37D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x354 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x360 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CE SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63C SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x16B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x780 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x777 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x81F SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x908 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x971 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x97A PUSH0 PUSH2 0xE01 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x9B3 SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9DF SWAP1 PUSH2 0x1501 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA2A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA01 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA2A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA0D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xA3D PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xA47 DUP4 DUP4 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA58 PUSH2 0xD7A JUMP JUMPDEST PUSH2 0xA69 PUSH2 0xA63 PUSH2 0x97C JUMP JUMPDEST DUP4 PUSH2 0x108A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD6 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBFE SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCFE PUSH2 0xD7A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0xE01 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD82 PUSH2 0x11D3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDA0 PUSH2 0x97C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFF JUMPI PUSH2 0xDC3 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF33 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2A SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1014 JUMPI PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFC6 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1080 JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1078 SWAP2 SWAP1 PUSH2 0x1799 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F0 SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x110A SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x115D SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11C1 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x121C DUP3 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x1226 DUP2 DUP6 PUSH2 0x11E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x1236 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11F4 JUMP JUMPDEST PUSH2 0x123F DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1262 DUP2 DUP5 PUSH2 0x1212 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1297 DUP3 PUSH2 0x126E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A7 DUP2 PUSH2 0x128D JUMP JUMPDEST DUP2 EQ PUSH2 0x12B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12C2 DUP2 PUSH2 0x129E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12DA DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F5 DUP2 PUSH2 0x12D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x131E DUP6 DUP3 DUP7 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x132F DUP6 DUP3 DUP7 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x134D DUP2 PUSH2 0x1339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1366 PUSH0 DUP4 ADD DUP5 PUSH2 0x1344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0x12C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138E PUSH0 DUP4 ADD DUP5 PUSH2 0x136C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13AB JUMPI PUSH2 0x13AA PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B8 DUP7 DUP3 DUP8 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13C9 DUP7 DUP3 DUP8 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13DA DUP7 DUP3 DUP8 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1412 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142D JUMPI PUSH2 0x142C PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x143A DUP5 DUP3 DUP6 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x128D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1465 PUSH0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1480 JUMPI PUSH2 0x147F PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148D DUP5 DUP3 DUP6 ADD PUSH2 0x12E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AB PUSH2 0x126A JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B9 DUP6 DUP3 DUP7 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14CA DUP6 DUP3 DUP7 ADD PUSH2 0x12B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1518 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x152B JUMPI PUSH2 0x152A PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1565 PUSH1 0xF DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1570 DUP3 PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1592 DUP2 PUSH2 0x1559 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642073656E646572206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15CD PUSH1 0x16 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D8 DUP3 PUSH2 0x1599 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15FA DUP2 PUSH2 0x15C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563656976657220616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1635 PUSH1 0x18 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1640 DUP3 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1662 DUP2 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x169D PUSH1 0xB DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A8 DUP3 PUSH2 0x1669 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16CA DUP2 PUSH2 0x1691 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1705 PUSH1 0x14 DUP4 PUSH2 0x11E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1710 DUP3 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1732 DUP2 PUSH2 0x16F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1770 DUP3 PUSH2 0x12C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x177B DUP4 PUSH2 0x12C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1793 JUMPI PUSH2 0x1792 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17A3 DUP3 PUSH2 0x12C8 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE DUP4 PUSH2 0x12C8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x17C6 JUMPI PUSH2 0x17C5 PUSH2 0x1739 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 JUMP 0x1F TSTORE DUP2 SWAP9 0xC9 PUSH21 0x64E77C096EFB352C0E15C6E061498EB524FE7230D8 0xE6 PUSH30 0x2864736F6C634300081A0033000000000000000000000000000000000000 ",
							"sourceMap": "145:404:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:85:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1498:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;716:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1854:711;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;630:78;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;533:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;419:127:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;295:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;931:415:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1354:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;440:85:4;479:13;512:5;505:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:85;:::o;1498:348::-;1565:4;1605:1;1586:21;;:7;:21;;;1582:79;;1624:25;;;;;;;;;;:::i;:::-;;;;;;;;1582:79;1708:1;1673:11;:23;1685:10;1673:23;;;;;;;;;;;;;;;:32;1697:7;1673:32;;;;;;;;;;;;;;;:36;;;;1755:5;1720:11;:23;1732:10;1720:23;;;;;;;;;;;;;;;:32;1744:7;1720:32;;;;;;;;;;;;;;;:40;;;;1799:7;1778:36;;1787:10;1778:36;;;1808:5;1778:36;;;;;;:::i;:::-;;;;;;;;1834:4;1827:11;;1498:348;;;;:::o;716:87::-;762:7;789:6;;782:13;;716:87;:::o;1854:711::-;1935:4;1972:1;1956:18;;:4;:18;;;1952:83;;1991:32;;;;;;;;;;:::i;:::-;;;;;;;;1952:83;2067:1;2051:18;;:4;:18;;;2047:85;;2086:34;;;;;;;;;;:::i;:::-;;;;;;;;2047:85;2180:5;2148:11;:17;2160:4;2148:17;;;;;;;;;;;;;;;:29;2166:10;2148:29;;;;;;;;;;;;;;;;:37;2144:92;;;2202:21;;;;;;;;;;:::i;:::-;;;;;;;;2144:92;2270:5;2252:9;:15;2262:4;2252:15;;;;;;;;;;;;;;;;:23;2248:86;;;2292:30;;;;;;;;;;:::i;:::-;;;;;;;;2248:86;2363:5;2346:9;:13;2356:2;2346:13;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;2398:5;2379:9;:15;2389:4;2379:15;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2474:5;2441:11;:17;2453:4;2441:17;;;;;;;;;;;;;;;:29;2459:10;2441:29;;;;;;;;;;;;;;;;:38;;;;;;;;;;;2523:2;2508:25;;2517:4;2508:25;;;2527:5;2508:25;;;;;;:::i;:::-;;;;;;;;2553:4;2546:11;;1854:711;;;;;:::o;630:78::-;673:5;698:2;691:9;;630:78;:::o;811:112::-;870:7;897:9;:18;907:7;897:18;;;;;;;;;;;;;;;;890:25;;811:112;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;533:89:4:-;574:13;607:7;600:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;533:89;:::o;419:127:5:-;490:4;1531:13:0;:11;:13::i;:::-;514:24:5::1;526:4;532:5;514:11;:24::i;:::-;507:31;;419:127:::0;;;;:::o;295:116::-;352:4;1531:13:0;:11;:13::i;:::-;376:27:5::1;388:7;:5;:7::i;:::-;397:5;376:11;:27::i;:::-;369:34;;295:116:::0;;;:::o;931:415:4:-;994:4;1029:1;1015:16;;:2;:16;;;1011:74;;1048:25;;;;;;;;;;:::i;:::-;;;;;;;;1011:74;1125:5;1101:9;:21;1111:10;1101:21;;;;;;;;;;;;;;;;:29;1097:92;;;1147:30;;;;;;;;;;:::i;:::-;;;;;;;;1097:92;1226:5;1201:9;:21;1211:10;1201:21;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;1259:5;1242:9;:13;1252:2;1242:13;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;1304:2;1283:31;;1292:10;1283:31;;;1308:5;1283:31;;;;;;:::i;:::-;;;;;;;;1334:4;1327:11;;931:415;;;;:::o;1354:136::-;1428:7;1455:11;:18;1467:5;1455:18;;;;;;;;;;;;;;;:27;1474:7;1455:27;;;;;;;;;;;;;;;;1448:34;;1354:136;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2882:408:4:-;2944:4;2979;2965:18;;2973:1;2965:18;;;2961:76;;3000:25;;;;;;;;;;:::i;:::-;;;;;;;;2961:76;3079:5;3061:9;:15;3071:4;3061:15;;;;;;;;;;;;;;;;:23;3057:202;;;3111:9;:15;3121:4;3111:15;;;;;;;;;;;;;;;;3101:6;;:25;;;;;;;:::i;:::-;;;;;;;;3159:1;3141:9;:15;3151:4;3141:15;;;;;;;;;;;;;;;:19;;;;3057:202;;;3203:5;3193:6;;:15;;;;;;;:::i;:::-;;;;;;;;3242:5;3223:9;:15;3233:4;3223:15;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;3057:202;3278:4;3271:11;;2882:408;;;;:::o;2573:301::-;2633:4;2668:1;2654:16;;:2;:16;;;2650:83;;2687:34;;;;;;;;;;:::i;:::-;;;;;;;;2650:83;2755:5;2745:6;;:15;;;;;;;:::i;:::-;;;;;;;;2788:5;2771:9;:13;2781:2;2771:13;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;2832:2;2811:31;;2828:1;2811:31;;;2836:5;2811:31;;;;;;:::i;:::-;;;;;;;;2862:4;2855:11;;2573:301;;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:329::-;5492:6;5541:2;5529:9;5520:7;5516:23;5512:32;5509:119;;;5547:79;;:::i;:::-;5509:119;5667:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;:::i;:::-;5682:63;;5638:117;5433:329;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:165::-;6900:17;6896:1;6888:6;6884:14;6877:41;6760:165;:::o;6931:366::-;7073:3;7094:67;7158:2;7153:3;7094:67;:::i;:::-;7087:74;;7170:93;7259:3;7170:93;:::i;:::-;7288:2;7283:3;7279:12;7272:19;;6931:366;;;:::o;7303:419::-;7469:4;7507:2;7496:9;7492:18;7484:26;;7556:9;7550:4;7546:20;7542:1;7531:9;7527:17;7520:47;7584:131;7710:4;7584:131;:::i;:::-;7576:139;;7303:419;;;:::o;7728:172::-;7868:24;7864:1;7856:6;7852:14;7845:48;7728:172;:::o;7906:366::-;8048:3;8069:67;8133:2;8128:3;8069:67;:::i;:::-;8062:74;;8145:93;8234:3;8145:93;:::i;:::-;8263:2;8258:3;8254:12;8247:19;;7906:366;;;:::o;8278:419::-;8444:4;8482:2;8471:9;8467:18;8459:26;;8531:9;8525:4;8521:20;8517:1;8506:9;8502:17;8495:47;8559:131;8685:4;8559:131;:::i;:::-;8551:139;;8278:419;;;:::o;8703:174::-;8843:26;8839:1;8831:6;8827:14;8820:50;8703:174;:::o;8883:366::-;9025:3;9046:67;9110:2;9105:3;9046:67;:::i;:::-;9039:74;;9122:93;9211:3;9122:93;:::i;:::-;9240:2;9235:3;9231:12;9224:19;;8883:366;;;:::o;9255:419::-;9421:4;9459:2;9448:9;9444:18;9436:26;;9508:9;9502:4;9498:20;9494:1;9483:9;9479:17;9472:47;9536:131;9662:4;9536:131;:::i;:::-;9528:139;;9255:419;;;:::o;9680:161::-;9820:13;9816:1;9808:6;9804:14;9797:37;9680:161;:::o;9847:366::-;9989:3;10010:67;10074:2;10069:3;10010:67;:::i;:::-;10003:74;;10086:93;10175:3;10086:93;:::i;:::-;10204:2;10199:3;10195:12;10188:19;;9847:366;;;:::o;10219:419::-;10385:4;10423:2;10412:9;10408:18;10400:26;;10472:9;10466:4;10462:20;10458:1;10447:9;10443:17;10436:47;10500:131;10626:4;10500:131;:::i;:::-;10492:139;;10219:419;;;:::o;10644:170::-;10784:22;10780:1;10772:6;10768:14;10761:46;10644:170;:::o;10820:366::-;10962:3;10983:67;11047:2;11042:3;10983:67;:::i;:::-;10976:74;;11059:93;11148:3;11059:93;:::i;:::-;11177:2;11172:3;11168:12;11161:19;;10820:366;;;:::o;11192:419::-;11358:4;11396:2;11385:9;11381:18;11373:26;;11445:9;11439:4;11435:20;11431:1;11420:9;11416:17;11409:47;11473:131;11599:4;11473:131;:::i;:::-;11465:139;;11192:419;;;:::o;11617:180::-;11665:77;11662:1;11655:88;11762:4;11759:1;11752:15;11786:4;11783:1;11776:15;11803:191;11843:3;11862:20;11880:1;11862:20;:::i;:::-;11857:25;;11896:20;11914:1;11896:20;:::i;:::-;11891:25;;11939:1;11936;11932:9;11925:16;;11960:3;11957:1;11954:10;11951:36;;;11967:18;;:::i;:::-;11951:36;11803:191;;;;:::o;12000:194::-;12040:4;12060:20;12078:1;12060:20;:::i;:::-;12055:25;;12094:20;12112:1;12094:20;:::i;:::-;12089:25;;12138:1;12135;12131:9;12123:17;;12162:1;12156:4;12153:11;12150:37;;;12167:18;;:::i;:::-;12150:37;12000:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1229200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"burn(address,uint256)": "infinite",
								"decimals()": "383",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 190,
									"end": 287,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 190,
									"end": 287,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 190,
									"end": 287,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 190,
									"end": 287,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 212,
									"end": 222,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5465737445524300000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 235,
									"end": 240,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 235,
									"end": 252,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 252,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5445524300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 270,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 263,
									"end": 279,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 263,
									"end": 279,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 692,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 593,
									"end": 692,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 645,
									"end": 651,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 684,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 673,
									"end": 685,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 663,
									"end": 685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 663,
									"end": 685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 692,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 593,
									"end": 692,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 593,
									"end": 692,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 593,
									"end": 692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 698,
									"end": 878,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 698,
									"end": 878,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 746,
									"end": 823,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 743,
									"end": 744,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 824,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 843,
									"end": 847,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 867,
									"end": 871,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 872,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 884,
									"end": 1064,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 884,
									"end": 1064,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 932,
									"end": 1009,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 922,
									"end": 1010,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1029,
									"end": 1033,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1026,
									"end": 1027,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1019,
									"end": 1034,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1053,
									"end": 1057,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1043,
									"end": 1058,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1153,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1198,
									"end": 1199,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1192,
									"end": 1196,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1200,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1219,
									"end": 1237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1279,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1267,
									"end": 1273,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1263,
									"end": 1280,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1253,
									"end": 1280,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1253,
									"end": 1280,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1337,
									"end": 1339,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1335,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1340,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1303,
									"end": 1341,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1356,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1121,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1070,
									"end": 1390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1445,
									"end": 1449,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1471,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1471,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1460,
									"end": 1471,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1488,
									"end": 1489,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1495,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1529,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 1530,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1504,
									"end": 1530,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1504,
									"end": 1530,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1396,
									"end": 1537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1586,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1629,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1615,
									"end": 1620,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1625,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1630,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1597,
									"end": 1630,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1597,
									"end": 1630,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1543,
									"end": 1636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1686,
									"end": 1694,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1736,
									"end": 1741,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1730,
									"end": 1734,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1742,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1705,
									"end": 1742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1824,
									"end": 1830,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1875,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1862,
									"end": 1872,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1927,
									"end": 1993,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1916,
									"end": 1925,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1897,
									"end": 1994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2045,
									"end": 2053,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2034,
									"end": 2043,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2015,
									"end": 2054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2054,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2003,
									"end": 2054,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2087,
									"end": 2091,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2083,
									"end": 2092,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2076,
									"end": 2081,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2093,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2093,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2063,
									"end": 2093,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2136,
									"end": 2140,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2126,
									"end": 2134,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2122,
									"end": 2141,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2115,
									"end": 2120,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2112,
									"end": 2142,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2102,
									"end": 2142,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2102,
									"end": 2142,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 2148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1831,
									"end": 2148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1755,
									"end": 2148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2191,
									"end": 2198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2220,
									"end": 2225,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2225,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2209,
									"end": 2225,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2154,
									"end": 2231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2291,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2279,
									"end": 2291,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2279,
									"end": 2291,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2237,
									"end": 2297,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2353,
									"end": 2362,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2413,
									"end": 2437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 2404,
									"end": 2438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2386,
									"end": 2439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2373,
									"end": 2439,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2373,
									"end": 2439,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2303,
									"end": 2445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2497,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2515,
									"end": 2520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2451,
									"end": 2526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2673,
									"end": 2680,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 2642,
									"end": 2681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2776,
									"end": 2792,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 2752,
									"end": 2793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2744,
									"end": 2750,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2737,
									"end": 2741,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2731,
									"end": 2742,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2703,
									"end": 2794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2690,
									"end": 2795,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2608,
									"end": 2801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2532,
									"end": 2801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2807,
									"end": 2880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 2963,
									"end": 2995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3062,
									"end": 3068,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3004,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2939,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2886,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3158,
									"end": 3161,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3151,
									"end": 3156,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3148,
									"end": 3162,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3249,
									"end": 3250,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3242,
									"end": 3247,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3212,
									"end": 3251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3185,
									"end": 3186,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3178,
									"end": 3183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3174,
									"end": 3187,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "tag",
									"source": 6,
									"value": "78"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3267,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3374,
									"end": 3376,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3369,
									"end": 3372,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3366,
									"end": 3377,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3440,
									"end": 3445,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3408,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3510,
									"end": 3520,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3492,
									"end": 3521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3482,
									"end": 3490,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3478,
									"end": 3522,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3675,
									"end": 3677,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3663,
									"end": 3673,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3660,
									"end": 3678,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3696,
									"end": 3704,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3704,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3681,
									"end": 3704,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3793,
									"end": 3796,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3775,
									"end": 3797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3765,
									"end": 3773,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3761,
									"end": 3798,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3748,
									"end": 3759,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3719,
									"end": 3799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3378,
									"end": 3809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3273,
									"end": 3816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3876,
									"end": 3884,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3931,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3920,
									"end": 3924,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3916,
									"end": 3932,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3895,
									"end": 3932,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3895,
									"end": 3932,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3822,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3989,
									"end": 3995,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4070,
									"end": 4071,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4066,
									"end": 4072,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4058,
									"end": 4063,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4055,
									"end": 4056,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4051,
									"end": 4064,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4022,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4018,
									"end": 4074,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4103,
									"end": 4107,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4093,
									"end": 4108,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4108,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4108,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3996,
									"end": 4114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3945,
									"end": 4114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4366,
									"end": 4369,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4360,
									"end": 4364,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4341,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4333,
									"end": 4370,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4333,
									"end": 4370,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4403,
									"end": 4406,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4400,
									"end": 4401,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4396,
									"end": 4407,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4390,
									"end": 4394,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4387,
									"end": 4408,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4379,
									"end": 4408,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4379,
									"end": 4408,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4119,
									"end": 4414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4569,
									"end": 4572,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 4536,
									"end": 4573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4638,
									"end": 4656,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4630,
									"end": 4636,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4627,
									"end": 4657,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4660,
									"end": 4678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4736,
									"end": 4740,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4730,
									"end": 4741,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 4704,
									"end": 4742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4849,
									"end": 4855,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4841,
									"end": 4847,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4835,
									"end": 4839,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4789,
									"end": 4856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4883,
									"end": 4884,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4907,
									"end": 4911,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4894,
									"end": 4911,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4894,
									"end": 4911,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4931,
									"end": 4937,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4956,
									"end": 4957,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5630,
									"end": 5636,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5679,
									"end": 5688,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5674,
									"end": 5677,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 5670,
									"end": 5689,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5664,
									"end": 5690,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5655,
									"end": 5690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5655,
									"end": 5690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5790,
									"end": 5796,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5783,
									"end": 5788,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5730,
									"end": 5797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5724,
									"end": 5728,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5717,
									"end": 5798,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5586,
									"end": 5808,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4999,
									"end": 5008,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4991,
									"end": 4997,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4987,
									"end": 5009,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5069,
									"end": 5073,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 5037,
									"end": 5074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5096,
									"end": 5097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5124,
									"end": 5131,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5122,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5118,
									"end": 5132,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5203,
									"end": 5212,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5198,
									"end": 5201,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5194,
									"end": 5213,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5188,
									"end": 5214,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5173,
									"end": 5215,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5254,
									"end": 5255,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5246,
									"end": 5252,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5242,
									"end": 5256,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5232,
									"end": 5256,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5232,
									"end": 5256,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5301,
									"end": 5303,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5290,
									"end": 5299,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5286,
									"end": 5304,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5273,
									"end": 5304,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5273,
									"end": 5304,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5147,
									"end": 5151,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5144,
									"end": 5145,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5140,
									"end": 5152,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5135,
									"end": 5152,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5135,
									"end": 5152,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5346,
									"end": 5352,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5337,
									"end": 5344,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5334,
									"end": 5353,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5404,
									"end": 5413,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5399,
									"end": 5402,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5389,
									"end": 5415,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5489,
									"end": 5493,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5481,
									"end": 5487,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5477,
									"end": 5494,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5466,
									"end": 5475,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5447,
									"end": 5495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5439,
									"end": 5445,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5432,
									"end": 5496,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5354,
									"end": 5510,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5556,
									"end": 5557,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5552,
									"end": 5553,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5544,
									"end": 5550,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5540,
									"end": 5554,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5536,
									"end": 5558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5530,
									"end": 5534,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5523,
									"end": 5559,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4419,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 145,
									"end": 549,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 145,
									"end": 549,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 549,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122085561f5d8198c97464e77c096efb352c0e15c6e061498eb524fe7230d8e67d2864736f6c634300081a0033",
									".code": [
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "A0712D68"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "A0712D68"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "9DC29FAC"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 145,
											"end": 549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 440,
											"end": 525,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 440,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 440,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1498,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1498,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1498,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 716,
											"end": 803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 716,
											"end": 803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1854,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1854,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1854,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 630,
											"end": 708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 811,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 811,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 811,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 533,
											"end": 622,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 533,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 533,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 419,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 419,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 419,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 419,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 295,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 295,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 295,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 931,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 931,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1354,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1354,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1354,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 440,
											"end": 525,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 440,
											"end": 525,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 492,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 505,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 505,
											"end": 517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 505,
											"end": 517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 505,
											"end": 517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 440,
											"end": 525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1582,
											"end": 1661,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1624,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1624,
											"end": 1649,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1582,
											"end": 1661,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1582,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1708,
											"end": 1709,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1684,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1695,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1696,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1704,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1705,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1709,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1709,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1673,
											"end": 1709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1755,
											"end": 1760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1731,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1742,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1743,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1751,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1760,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1720,
											"end": 1760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1806,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1787,
											"end": 1797,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 1808,
											"end": 1813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1778,
											"end": 1814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1814,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1834,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1827,
											"end": 1838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1838,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1498,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 716,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 762,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 795,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 789,
											"end": 795,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 795,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 716,
											"end": 803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1974,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1952,
											"end": 2035,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1991,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 2023,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1952,
											"end": 2035,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1952,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2055,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2047,
											"end": 2132,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2086,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2120,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2047,
											"end": 2132,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2047,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2159,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2164,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2176,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2185,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2236,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2202,
											"end": 2223,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2236,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2261,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2266,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2275,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2334,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2248,
											"end": 2334,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2292,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2292,
											"end": 2322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2334,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2248,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2355,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2358,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2346,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2346,
											"end": 2368,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2398,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 2379,
											"end": 2403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2474,
											"end": 2479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2469,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2523,
											"end": 2525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2527,
											"end": 2532,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2508,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2546,
											"end": 2557,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2546,
											"end": 2557,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1854,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 673,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 691,
											"end": 700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 630,
											"end": 708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 811,
											"end": 923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 897,
											"end": 915,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 890,
											"end": 915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 890,
											"end": 915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 811,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 533,
											"end": 622,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 533,
											"end": 622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 574,
											"end": 587,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 607,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 600,
											"end": 614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 600,
											"end": 614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 600,
											"end": 614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 533,
											"end": 622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 419,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 419,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 490,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 514,
											"end": 538,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 526,
											"end": 530,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 532,
											"end": 537,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 514,
											"end": 525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 514,
											"end": 538,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 514,
											"end": 538,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 514,
											"end": 538,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 507,
											"end": 538,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 507,
											"end": 538,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 419,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 295,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 352,
											"end": 356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 376,
											"end": 403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 388,
											"end": 395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 388,
											"end": 393,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 388,
											"end": 395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 388,
											"end": 395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 388,
											"end": 395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 397,
											"end": 402,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 376,
											"end": 387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 376,
											"end": 403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 376,
											"end": 403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 369,
											"end": 403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 369,
											"end": 403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 994,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1015,
											"end": 1031,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1011,
											"end": 1085,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1048,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1011,
											"end": 1085,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1011,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1110,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1121,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1122,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1130,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1189,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1097,
											"end": 1189,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1147,
											"end": 1177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1177,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1097,
											"end": 1189,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1097,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1226,
											"end": 1231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1210,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1221,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1201,
											"end": 1231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1231,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1242,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1242,
											"end": 1264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1304,
											"end": 1306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1302,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1283,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1314,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1338,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1327,
											"end": 1338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1338,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 931,
											"end": 1346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1466,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1472,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1482,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1354,
											"end": 1490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 3290,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2882,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2983,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2961,
											"end": 3037,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3000,
											"end": 3025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2961,
											"end": 3037,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2961,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3079,
											"end": 3084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3070,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3075,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3076,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3084,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3125,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3101,
											"end": 3126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3150,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3203,
											"end": 3208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3193,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3232,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3223,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3057,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3282,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 3290,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 3290,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 3290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 3290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2882,
											"end": 3290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2573,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2633,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2669,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2670,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2670,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2670,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2654,
											"end": 2670,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2670,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2650,
											"end": 2733,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2687,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2721,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2650,
											"end": 2733,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 2650,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2745,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2783,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2771,
											"end": 2793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2836,
											"end": 2841,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2811,
											"end": 2842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2842,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2855,
											"end": 2866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2866,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2874,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2874,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2573,
											"end": 2874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5527,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5516,
											"end": 5539,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5544,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5547,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5547,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5509,
											"end": 5628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5737,
											"end": 5744,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5717,
											"end": 5726,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 5692,
											"end": 5745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 5692,
											"end": 5745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 5755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5433,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6925,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 6760,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6900,
											"end": 6917,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6877,
											"end": 6918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7153,
											"end": 7156,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7094,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7170,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 7297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7484,
											"end": 7510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7484,
											"end": 7510,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7556,
											"end": 7565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7550,
											"end": 7554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7546,
											"end": 7566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7520,
											"end": 7567,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 7584,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7900,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7728,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7868,
											"end": 7892,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C69642073656E646572206164647265737300000000000000000000"
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7852,
											"end": 7866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 7893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7728,
											"end": 7900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8133,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 8128,
											"end": 8131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8069,
											"end": 8136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 8145,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8258,
											"end": 8261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 8272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8484,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8471,
											"end": 8480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8459,
											"end": 8485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8459,
											"end": 8485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8502,
											"end": 8519,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8495,
											"end": 8542,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 8559,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8551,
											"end": 8690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8551,
											"end": 8690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8877,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 8703,
											"end": 8877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 8869,
											"name": "PUSH",
											"source": 6,
											"value": "496E76616C696420726563656976657220616464726573730000000000000000"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8831,
											"end": 8837,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8827,
											"end": 8841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8820,
											"end": 8870,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8877,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8703,
											"end": 8877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9249,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8883,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9110,
											"end": 9112,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9046,
											"end": 9113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9113,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9046,
											"end": 9113,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9039,
											"end": 9113,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9039,
											"end": 9113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9122,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9211,
											"end": 9214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9122,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9122,
											"end": 9215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9122,
											"end": 9215,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9122,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9242,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9235,
											"end": 9238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9231,
											"end": 9243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9224,
											"end": 9243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8883,
											"end": 9249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 9425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9457,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9494,
											"end": 9495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9662,
											"end": 9666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9536,
											"end": 9667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9255,
											"end": 9674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9841,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 9680,
											"end": 9841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9820,
											"end": 9833,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F7420616C6C6F776564000000000000000000000000000000000000000000"
										},
										{
											"begin": 9816,
											"end": 9817,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9808,
											"end": 9814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9804,
											"end": 9818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9834,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9847,
											"end": 10213,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9847,
											"end": 10213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9989,
											"end": 9992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10074,
											"end": 10076,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 10069,
											"end": 10072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10010,
											"end": 10077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 10010,
											"end": 10077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10010,
											"end": 10077,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10010,
											"end": 10077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10003,
											"end": 10077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10086,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 10175,
											"end": 10178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10086,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 10086,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10086,
											"end": 10179,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 10086,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10199,
											"end": 10202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9847,
											"end": 10213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9847,
											"end": 10213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9847,
											"end": 10213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9847,
											"end": 10213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10638,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10219,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10385,
											"end": 10389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10423,
											"end": 10425,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10412,
											"end": 10421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10408,
											"end": 10426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10400,
											"end": 10426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10400,
											"end": 10426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10472,
											"end": 10481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10462,
											"end": 10482,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10458,
											"end": 10459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10447,
											"end": 10456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10436,
											"end": 10483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10500,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10500,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 10500,
											"end": 10631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10500,
											"end": 10631,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10500,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10492,
											"end": 10631,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10492,
											"end": 10631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10814,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 10644,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10806,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 10780,
											"end": 10781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10768,
											"end": 10782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10761,
											"end": 10807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10644,
											"end": 10814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 11186,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 10820,
											"end": 11186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10962,
											"end": 10965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10983,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 11047,
											"end": 11049,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 11042,
											"end": 11045,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10983,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 10983,
											"end": 11050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10983,
											"end": 11050,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10983,
											"end": 11050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11148,
											"end": 11151,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11059,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11152,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11059,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11177,
											"end": 11179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11172,
											"end": 11175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11168,
											"end": 11180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11161,
											"end": 11180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 11186,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 11186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 11186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 11186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11611,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 11192,
											"end": 11611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11358,
											"end": 11362,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11396,
											"end": 11398,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11381,
											"end": 11399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11439,
											"end": 11443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11435,
											"end": 11455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11431,
											"end": 11432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11420,
											"end": 11429,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11473,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11599,
											"end": 11603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11473,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 11473,
											"end": 11604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11473,
											"end": 11604,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11473,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11465,
											"end": 11604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11465,
											"end": 11604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11617,
											"end": 11797,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11617,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11665,
											"end": 11742,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11662,
											"end": 11663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11655,
											"end": 11743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11762,
											"end": 11766,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11759,
											"end": 11760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11752,
											"end": 11767,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11786,
											"end": 11790,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11783,
											"end": 11784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11843,
											"end": 11846,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11880,
											"end": 11881,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 11862,
											"end": 11882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11862,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11857,
											"end": 11882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11857,
											"end": 11882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 11896,
											"end": 11916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 11896,
											"end": 11916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11891,
											"end": 11916,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11891,
											"end": 11916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11932,
											"end": 11941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11925,
											"end": 11941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11925,
											"end": 11941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11960,
											"end": 11963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11957,
											"end": 11958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11954,
											"end": 11964,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11967,
											"end": 11985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11951,
											"end": 11987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12194,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 12000,
											"end": 12194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12040,
											"end": 12044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12060,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 12078,
											"end": 12079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12060,
											"end": 12080,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12060,
											"end": 12080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12060,
											"end": 12080,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 12060,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12055,
											"end": 12080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12055,
											"end": 12080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12094,
											"end": 12114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12094,
											"end": 12114,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 12094,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12089,
											"end": 12114,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12089,
											"end": 12114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12139,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12135,
											"end": 12136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12131,
											"end": 12140,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12123,
											"end": 12140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12123,
											"end": 12140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12162,
											"end": 12163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12153,
											"end": 12164,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12187,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12150,
											"end": 12187,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12167,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12167,
											"end": 12185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12167,
											"end": 12185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12167,
											"end": 12185,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12167,
											"end": 12185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12150,
											"end": 12187,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12150,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12194,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ERCProto.sol",
								"contracts/TestERC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestERC.sol\":\"TestERC\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ERCProto.sol\":{\"keccak256\":\"0x6b82c9edfe451e87cee8925a4ff30f0b178cd94b03e70245d9af06b6c91e6bb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b77602a1d691971a896c3922487205ebeeb99b9f8b9ebb28bee09e8d562924\",\"dweb:/ipfs/QmV5atnWwUMgpoiZCnVmgCUGAhym5e5z2f8N6CRhm6c2Uh\"]},\"contracts/TestERC.sol\":{\"keccak256\":\"0x117cca55ded3f2e9e1352cc27ab3177aef7a7ed5837641f60802f87c579eb28e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e996575ae8b349849a51ba4c3d27c1870e1e93d563cb07738a22355282845533\",\"dweb:/ipfs/QmQxbYh2GkEXiWRVfPXXQsUgVteegjF3CXgzDtTDeNnCp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 291,
								"contract": "contracts/TestERC.sol:TestERC",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 293,
								"contract": "contracts/TestERC.sol:TestERC",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 295,
								"contract": "contracts/TestERC.sol:TestERC",
								"label": "_total",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 299,
								"contract": "contracts/TestERC.sol:TestERC",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 305,
								"contract": "contracts/TestERC.sol:TestERC",
								"label": "_allowances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 8,
								"contract": "contracts/TestERC.sol:TestERC",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 282,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 281,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 281,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								281
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 226,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "305:6:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 251,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 251,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 247,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 251,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "277:405:2",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "125:558:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							281
						]
					},
					"id": 282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 281,
							"linearizedBaseContracts": [
								281
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 259,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 258,
												"id": 261,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 281,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 268,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 267,
												"id": 270,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 281,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 281,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 282,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"contracts/ERCProto.sol": {
				"ast": {
					"absolutePath": "contracts/ERCProto.sol",
					"exportedSymbols": {
						"ERCProto": [
							659
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						]
					},
					"id": 660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 226,
							"src": "63:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 660,
							"sourceUnit": 252,
							"src": "121:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 286,
										"name": "IERC20",
										"nameLocations": [
											"230:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "230:6:4"
									},
									"id": 287,
									"nodeType": "InheritanceSpecifier",
									"src": "230:6:4"
								},
								{
									"baseName": {
										"id": 288,
										"name": "IERC20Metadata",
										"nameLocations": [
											"238:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 251,
										"src": "238:14:4"
									},
									"id": 289,
									"nodeType": "InheritanceSpecifier",
									"src": "238:14:4"
								}
							],
							"canonicalName": "ERCProto",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 659,
							"linearizedBaseContracts": [
								659,
								251,
								225
							],
							"name": "ERCProto",
							"nameLocation": "218:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "267:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "260:12:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "260:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 293,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "286:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "279:14:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 292,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "279:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_total",
									"nameLocation": "310:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "302:14:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "354:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "325:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 298,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 296,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "334:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:28:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 297,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "345:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 305,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "420:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 659,
									"src": "370:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 304,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "379:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "370:49:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 303,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 301,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "390:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 302,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "410:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										238
									],
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "494:31:4",
										"statements": [
											{
												"expression": {
													"id": 310,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "512:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 309,
												"id": 311,
												"nodeType": "Return",
												"src": "505:12:4"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "449:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:2:4"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "479:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 307,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "479:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "478:15:4"
									},
									"scope": 659,
									"src": "440:85:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										244
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "589:33:4",
										"statements": [
											{
												"expression": {
													"id": 318,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "607:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 317,
												"id": 319,
												"nodeType": "Return",
												"src": "600:14:4"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "542:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:2:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "574:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "574:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:15:4"
									},
									"scope": 659,
									"src": "533:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										250
									],
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "680:28:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "698:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 325,
												"id": 327,
												"nodeType": "Return",
												"src": "691:9:4"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 323,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 659,
									"src": "630:78:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										174
									],
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "771:32:4",
										"statements": [
											{
												"expression": {
													"id": 334,
													"name": "_total",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 295,
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 333,
												"id": 335,
												"nodeType": "Return",
												"src": "782:13:4"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "725:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:2:4"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "762:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:9:4"
									},
									"scope": 659,
									"src": "716:87:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										182
									],
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "879:44:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 344,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "897:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 346,
													"indexExpression": {
														"id": 345,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "907:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "897:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 347,
												"nodeType": "Return",
												"src": "890:25:4"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "820:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "838:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "830:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:17:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "870:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "869:9:4"
									},
									"scope": 659,
									"src": "811:112:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										192
									],
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "1000:346:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 358,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1015:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1029:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1021:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 359,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1021:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1021:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1015:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 369,
												"nodeType": "IfStatement",
												"src": "1011:74:4",
												"trueBody": {
													"id": 368,
													"nodeType": "Block",
													"src": "1033:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		},
																		"value": "Invalid address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		}
																	],
																	"id": 364,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1048:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1048:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 367,
															"nodeType": "ExpressionStatement",
															"src": "1048:25:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 370,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1101:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 373,
														"indexExpression": {
															"expression": {
																"id": 371,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1111:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1115:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1111:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1101:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 374,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1125:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1101:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "1097:92:4",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "1132:57:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1154:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																			"typeString": "literal_string \"Insufficient balance\""
																		},
																		"value": "Insufficient balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																			"typeString": "literal_string \"Insufficient balance\""
																		}
																	],
																	"id": 376,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1147:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1147:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 379,
															"nodeType": "ExpressionStatement",
															"src": "1147:30:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 382,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1201:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 385,
														"indexExpression": {
															"expression": {
																"id": 383,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1211:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1215:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1211:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1201:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 386,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1226:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1201:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "1201:30:4"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 389,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "1242:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 391,
														"indexExpression": {
															"id": 390,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1252:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1242:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 392,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "1259:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1242:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "1242:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 396,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1292:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1296:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1292:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "1304:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1308:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "1283:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1283:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "EmitStatement",
												"src": "1278:36:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1334:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 357,
												"id": 403,
												"nodeType": "Return",
												"src": "1327:11:4"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "940:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "957:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "949:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "969:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "961:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:27:4"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "994:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 355,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "994:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:6:4"
									},
									"scope": 659,
									"src": "931:415:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										202
									],
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "1437:53:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 414,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "1455:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 416,
														"indexExpression": {
															"id": 415,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1467:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1455:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 418,
													"indexExpression": {
														"id": 417,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1474:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1455:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 413,
												"id": 419,
												"nodeType": "Return",
												"src": "1448:34:4"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1363:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1381:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1373:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:32:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "1428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:9:4"
									},
									"scope": 659,
									"src": "1354:136:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										212
									],
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "1571:275:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1586:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1597:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1597:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1586:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"nodeType": "IfStatement",
												"src": "1582:79:4",
												"trueBody": {
													"id": 440,
													"nodeType": "Block",
													"src": "1609:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1631:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		},
																		"value": "Invalid address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		}
																	],
																	"id": 436,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1624:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1624:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 439,
															"nodeType": "ExpressionStatement",
															"src": "1624:25:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 442,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "1673:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 446,
															"indexExpression": {
																"expression": {
																	"id": 443,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1685:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1689:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1685:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1673:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 447,
														"indexExpression": {
															"id": 445,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1697:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1673:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1708:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1673:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1673:36:4"
											},
											{
												"expression": {
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 451,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "1720:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 455,
															"indexExpression": {
																"expression": {
																	"id": 452,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1732:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1736:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1732:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1720:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 456,
														"indexExpression": {
															"id": 454,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1744:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1720:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 457,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "1755:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1720:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "1720:40:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1787:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1791:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1787:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "1799:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "1808:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 168,
														"src": "1778:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1778:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "EmitStatement",
												"src": "1773:41:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1834:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 468,
												"nodeType": "Return",
												"src": "1827:11:4"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1507:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1523:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1515:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1540:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1532:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1514:32:4"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1565:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1565:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1564:6:4"
									},
									"scope": 659,
									"src": "1498:348:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										224
									],
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "1941:624:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 481,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "1956:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1972:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1964:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 482,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1964:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1964:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1956:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "1952:83:4",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "1976:59:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e76616c69642073656e6465722061646472657373",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1998:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																			"typeString": "literal_string \"Invalid sender address\""
																		},
																		"value": "Invalid sender address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c845f72fb5ceabb4d59b1044b79383c237f22ad0b30dc4f9927ab91356d3d20f",
																			"typeString": "literal_string \"Invalid sender address\""
																		}
																	],
																	"id": 487,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "1991:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1991:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "1991:32:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 493,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "2051:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2067:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2059:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 494,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2059:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2059:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2051:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "2047:85:4",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "2071:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e76616c69642072656365697665722061646472657373",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2093:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																			"typeString": "literal_string \"Invalid receiver address\""
																		},
																		"value": "Invalid receiver address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																			"typeString": "literal_string \"Invalid receiver address\""
																		}
																	],
																	"id": 499,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2086:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2086:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "2086:34:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "2148:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 506,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "2160:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2148:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 510,
														"indexExpression": {
															"expression": {
																"id": 508,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2166:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2170:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2166:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2148:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 511,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2180:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2148:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 518,
												"nodeType": "IfStatement",
												"src": "2144:92:4",
												"trueBody": {
													"id": 517,
													"nodeType": "Block",
													"src": "2187:49:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4e6f7420616c6c6f776564",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2209:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																			"typeString": "literal_string \"Not allowed\""
																		},
																		"value": "Not allowed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																			"typeString": "literal_string \"Not allowed\""
																		}
																	],
																	"id": 513,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2202:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2202:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 516,
															"nodeType": "ExpressionStatement",
															"src": "2202:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 519,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2252:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 521,
														"indexExpression": {
															"id": 520,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2262:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2252:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 522,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2270:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2252:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 529,
												"nodeType": "IfStatement",
												"src": "2248:86:4",
												"trueBody": {
													"id": 528,
													"nodeType": "Block",
													"src": "2277:57:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2299:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																			"typeString": "literal_string \"Insufficient balance\""
																		},
																		"value": "Insufficient balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																			"typeString": "literal_string \"Insufficient balance\""
																		}
																	],
																	"id": 524,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2292:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2292:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 527,
															"nodeType": "ExpressionStatement",
															"src": "2292:30:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 530,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2346:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 532,
														"indexExpression": {
															"id": 531,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "2356:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2346:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 533,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2363:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2346:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "2346:22:4"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 536,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2379:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 538,
														"indexExpression": {
															"id": 537,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2389:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2379:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 539,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2398:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2379:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "2379:24:4"
											},
											{
												"id": 551,
												"nodeType": "UncheckedBlock",
												"src": "2416:75:4",
												"statements": [
													{
														"expression": {
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 542,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "2441:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 546,
																	"indexExpression": {
																		"id": 543,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 472,
																		"src": "2453:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2441:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 547,
																"indexExpression": {
																	"expression": {
																		"id": 544,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2459:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2463:6:4",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2459:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "2441:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 548,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "2474:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2441:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 550,
														"nodeType": "ExpressionStatement",
														"src": "2441:38:4"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 553,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "2517:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "2523:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2527:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 552,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2508:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2508:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "EmitStatement",
												"src": "2503:30:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2553:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 480,
												"id": 559,
												"nodeType": "Return",
												"src": "2546:11:4"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1863:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1884:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1876:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1898:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1890:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1910:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1902:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:41:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "1935:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1935:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:6:4"
									},
									"scope": 659,
									"src": "1854:711:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2639:235:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 570,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "2654:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2660:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 571,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2660:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2660:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2654:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "2650:83:4",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "2672:61:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e76616c69642072656365697665722061646472657373",
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2694:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																			"typeString": "literal_string \"Invalid receiver address\""
																		},
																		"value": "Invalid receiver address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef",
																			"typeString": "literal_string \"Invalid receiver address\""
																		}
																	],
																	"id": 576,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2687:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2687:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "2687:34:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "_total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2745:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 583,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "2755:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2745:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "2745:15:4"
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 586,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2771:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 587,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2781:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2771:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "2788:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2771:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "2771:22:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2828:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2820:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2820:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2820:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "2832:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "2836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 592,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "2811:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "EmitStatement",
												"src": "2806:36:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2862:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 569,
												"id": 602,
												"nodeType": "Return",
												"src": "2855:11:4"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "2582:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2596:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2588:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2588:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2608:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2600:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:27:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2633:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2633:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:6:4"
									},
									"scope": 659,
									"src": "2573:301:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "2950:340:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2973:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2965:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 613,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2965:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2965:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 617,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "2979:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2965:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "2961:76:4",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "2985:52:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3007:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		},
																		"value": "Invalid address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																			"typeString": "literal_string \"Invalid address\""
																		}
																	],
																	"id": 619,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3000:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3000:25:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "ExpressionStatement",
															"src": "3000:25:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 625,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "3061:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 626,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "3071:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3061:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 628,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "3079:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3061:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 653,
													"nodeType": "Block",
													"src": "3178:81:4",
													"statements": [
														{
															"expression": {
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 643,
																	"name": "_total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3193:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "3203:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3193:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 646,
															"nodeType": "ExpressionStatement",
															"src": "3193:15:4"
														},
														{
															"expression": {
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 647,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "3223:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 649,
																	"indexExpression": {
																		"id": 648,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "3233:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3223:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 650,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "3242:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3223:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 652,
															"nodeType": "ExpressionStatement",
															"src": "3223:24:4"
														}
													]
												},
												"id": 654,
												"nodeType": "IfStatement",
												"src": "3057:202:4",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "3086:86:4",
													"statements": [
														{
															"expression": {
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 630,
																	"name": "_total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "3101:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 631,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "3111:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 633,
																	"indexExpression": {
																		"id": 632,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "3121:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3111:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3101:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 635,
															"nodeType": "ExpressionStatement",
															"src": "3101:25:4"
														},
														{
															"expression": {
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 636,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "3141:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 638,
																	"indexExpression": {
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "3151:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3141:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3141:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "3141:19:4"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3278:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 612,
												"id": 656,
												"nodeType": "Return",
												"src": "3271:11:4"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "2891:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2905:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2897:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2897:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2919:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2911:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2896:29:4"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "2944:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 610,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2944:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2943:6:4"
									},
									"scope": 659,
									"src": "2882:408:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 660,
							"src": "200:3093:4",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "35:3258:4"
				},
				"id": 4
			},
			"contracts/TestERC.sol": {
				"ast": {
					"absolutePath": "contracts/TestERC.sol",
					"exportedSymbols": {
						"Context": [
							281
						],
						"ERCProto": [
							659
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						],
						"Ownable": [
							147
						],
						"TestERC": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "contracts/ERCProto.sol",
							"file": "./ERCProto.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 660,
							"src": "63:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 663,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 720,
							"sourceUnit": 148,
							"src": "89:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 664,
										"name": "ERCProto",
										"nameLocations": [
											"165:8:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 659,
										"src": "165:8:5"
									},
									"id": 665,
									"nodeType": "InheritanceSpecifier",
									"src": "165:8:5"
								},
								{
									"baseName": {
										"id": 666,
										"name": "Ownable",
										"nameLocations": [
											"175:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "175:7:5"
									},
									"id": 667,
									"nodeType": "InheritanceSpecifier",
									"src": "175:7:5"
								}
							],
							"canonicalName": "TestERC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719,
								147,
								281,
								659,
								251,
								225
							],
							"name": "TestERC",
							"nameLocation": "154:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "224:63:5",
										"statements": [
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 674,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "235:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54657374455243",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "243:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_43988ce290f6c631ae72891f1fe62a66398c2ff3f0937f574234a89b6cc66232",
															"typeString": "literal_string \"TestERC\""
														},
														"value": "TestERC"
													},
													"src": "235:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "235:17:5"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 678,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "263:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54455243",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "273:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_1f9741f1bac32c2d8ee43c77b2e46a97ce4d718f305ae1e9ab5d44e0cc4318e3",
															"typeString": "literal_string \"TERC\""
														},
														"value": "TERC"
													},
													"src": "263:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "263:16:5"
											}
										]
									},
									"id": 683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 670,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "212:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "216:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "212:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 672,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 669,
												"name": "Ownable",
												"nameLocations": [
													"204:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "204:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "204:19:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:2:5"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:5"
									},
									"scope": 719,
									"src": "190:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "358:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 694,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "388:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "388:7:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "397:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 692,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "376:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TestERC_$719_$",
																"typeString": "type(contract super TestERC)"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "382:5:5",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "376:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "376:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 691,
												"id": 698,
												"nodeType": "Return",
												"src": "369:34:5"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 688,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 687,
												"name": "onlyOwner",
												"nameLocations": [
													"333:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "333:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "333:9:5"
										}
									],
									"name": "mint",
									"nameLocation": "304:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "317:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "309:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:15:5"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "352:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "352:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "351:6:5"
									},
									"scope": 719,
									"src": "295:116:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "496:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "526:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "532:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 711,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "514:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TestERC_$719_$",
																"typeString": "type(contract super TestERC)"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "520:5:5",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "514:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "514:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 710,
												"id": 716,
												"nodeType": "Return",
												"src": "507:31:5"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 706,
												"name": "onlyOwner",
												"nameLocations": [
													"471:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "471:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "471:9:5"
										}
									],
									"name": "burn",
									"nameLocation": "428:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "441:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:29:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "490:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 708,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "490:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:6:5"
									},
									"scope": 719,
									"src": "419:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 720,
							"src": "145:404:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								159,
								168
							]
						}
					],
					"src": "35:514:5"
				},
				"id": 5
			}
		}
	}
}